{"componentChunkName":"component---src-templates-documentation-js","path":"/docs/2.6.x/installation/kubernetes/helm/","result":{"data":{"pages":{"edges":[{"node":{"id":"d4eb66c4-5040-5518-8791-0facfe4ef019","fields":{"path":"/docs/2.6.x/installation/","version":"2.6.x","category":"installation"},"frontmatter":{"title":"Installation","description":"How to install Data Flow","path":"installation/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"55fe19c0-5937-50ce-9b8b-c111fa28b393","fields":{"path":"/docs/2.6.x/installation/local/","version":"2.6.x","category":"installation"},"frontmatter":{"title":"Local Machine","description":"Local Machine Installation Guide","path":"installation/local/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"0468a110-a1f9-5437-a130-2a8fef3720ae","fields":{"path":"/docs/2.6.x/installation/local/docker/","version":"2.6.x","category":"installation"},"frontmatter":{"title":"Docker Compose","description":"Installation using Docker Compose","path":"installation/local/docker","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"93ff4cc6-719a-528c-a0c2-bd692215126c","fields":{"path":"/docs/2.6.x/installation/local/docker-customize/","version":"2.6.x","category":"installation"},"frontmatter":{"title":"Docker Compose Customization","description":"Customize the Docker Compose installation","path":"installation/local/docker-customize","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"d7c6dbb6-dc16-5cdd-b5fd-bd4ac72301b2","fields":{"path":"/docs/2.6.x/installation/local/manual/","version":"2.6.x","category":"installation"},"frontmatter":{"title":"Manual","description":"Manual installation","path":"installation/local/manual","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"7a05059c-c9e6-559a-93b4-3f145feea083","fields":{"path":"/docs/2.6.x/installation/cloudfoundry/","version":"2.6.x","category":"installation"},"frontmatter":{"title":"Cloud Foundry","description":"Data Flow Cloud Foundry Installation Guide","path":"installation/cloudfoundry/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"eafb71a0-7f1b-52e4-a928-3dcdeb69b50e","fields":{"path":"/docs/2.6.x/installation/cloudfoundry/cf-cli/","version":"2.6.x","category":"installation"},"frontmatter":{"title":"Cloud Foundry CLI","description":"Install using the Cloud Foundry CLI","path":"installation/cloudfoundry/cf-cli","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"897ab8e6-86a7-57b6-95e9-d87939b082b7","fields":{"path":"/docs/2.6.x/installation/cloudfoundry/cf-local/","version":"2.6.x","category":"installation"},"frontmatter":{"title":"Running locally","description":"Configure the local servers to deploy to Cloud Foundry","path":"installation/cloudfoundry/cf-local","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"cae53d6a-9175-53a4-b94d-e87f5fcbf09c","fields":{"path":"/docs/2.6.x/installation/kubernetes/","version":"2.6.x","category":"installation"},"frontmatter":{"title":"Kubernetes","description":"Data Flow Kubernetes Installation Guide","path":"installation/kubernetes/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"d64f0f3d-2987-50c9-839c-61c17844f4b4","fields":{"path":"/docs/2.6.x/installation/kubernetes/creating-a-cluster/","version":"2.6.x","category":"installation"},"frontmatter":{"title":"Creating a Cluster","description":"Creating a Kubernetes Cluster","path":"installation/kubernetes/creating-a-cluster","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"2efdd123-cbc4-5d26-bba1-52f378682148","fields":{"path":"/docs/2.6.x/installation/kubernetes/helm/","version":"2.6.x","category":"installation"},"frontmatter":{"title":"Helm","description":"Installation using Helm","path":"installation/kubernetes/helm","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"2bdbe862-6bed-533d-8be5-502d8be827e3","fields":{"path":"/docs/2.6.x/installation/kubernetes/kubectl/","version":"2.6.x","category":"installation"},"frontmatter":{"title":"kubectl","description":"Installation using kubectl","path":"installation/kubernetes/kubectl","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"4d0da4fd-6198-51a0-946e-3503f626614b","fields":{"path":"/docs/2.6.x/installation/kubernetes/compatibility/","version":"2.6.x","category":"installation"},"frontmatter":{"title":"Kubernetes Compatibility","description":"Compatibility with Kubernetes Versions","path":"installation/kubernetes/compatibility","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"91c992f9-9acd-5928-b351-29468fcea493","fields":{"path":"/docs/2.6.x/concepts/","version":"2.6.x","category":"concepts"},"frontmatter":{"title":"Concepts","description":"Core Concepts in Spring Cloud Data Flow","path":"concepts/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"a06d76f8-3a10-5199-9e1b-7f6077e6c532","fields":{"path":"/docs/2.6.x/concepts/architecture/","version":"2.6.x","category":"concepts"},"frontmatter":{"title":"Architecture","description":"Introduction to Data Flow's Architecture.","path":"concepts/architecture/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"94f3cfcf-6bd5-5c38-b5b9-22874a071ea6","fields":{"path":"/docs/2.6.x/concepts/streams/","version":"2.6.x","category":"concepts"},"frontmatter":{"title":"Stream Processing","description":"Stream Processing Framework and Concepts","path":"concepts/streams/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"3eab1b33-471e-5357-8745-9849bd960ff2","fields":{"path":"/docs/2.6.x/concepts/batch-jobs/","version":"2.6.x","category":"concepts"},"frontmatter":{"title":"Batch Processing","description":"Batch Processing Framework and Concepts","path":"concepts/batch-jobs/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"bf947dc7-2380-5011-8573-8a6329f35cf1","fields":{"path":"/docs/2.6.x/concepts/monitoring/","version":"2.6.x","category":"concepts"},"frontmatter":{"title":"Monitoring","description":"Runtime monitoring of Stream data pipelines","path":"concepts/monitoring/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"65bac064-3e6a-5bed-9e2f-8ff830588879","fields":{"path":"/docs/2.6.x/concepts/tooling/","version":"2.6.x","category":"concepts"},"frontmatter":{"title":"Tooling","description":"Dashboard and Shell","path":"concepts/tooling/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"17639b95-6dca-58ea-a1c8-078112d55d5d","fields":{"path":"/docs/2.6.x/stream-developer-guides/","version":"2.6.x","category":"stream-developer-guides"},"frontmatter":{"title":"Stream Developer guides ","description":"Learn how to create Streaming data pipelines using prebuilt microservices or create your own.","path":"stream-developer-guides/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"d626d6a5-f24a-5a50-b080-05c354e24229","fields":{"path":"/docs/2.6.x/stream-developer-guides/getting-started/","version":"2.6.x","category":"stream-developer-guides"},"frontmatter":{"title":"Getting Started","description":"Getting Started with Stream Processing","path":"stream-developer-guides/getting-started/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"8faa20b9-2b8b-58e3-a1b4-4c604d3e43b6","fields":{"path":"/docs/2.6.x/stream-developer-guides/getting-started/stream/","version":"2.6.x","category":"stream-developer-guides"},"frontmatter":{"title":"Stream Processing","description":"Create and deploy a streaming data pipeline using prebuilt applications on your Local Machine","path":"stream-developer-guides/getting-started/stream/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"1e0d632f-b411-570f-a8e3-e51b6725e104","fields":{"path":"/docs/2.6.x/stream-developer-guides/streams/","version":"2.6.x","category":"stream-developer-guides"},"frontmatter":{"title":"Stream Development","description":"Stream Processing Developer Guide","path":"stream-developer-guides/streams/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"b40acf35-a4eb-53cd-9008-7bbcec53aed0","fields":{"path":"/docs/2.6.x/stream-developer-guides/streams/standalone-stream-rabbitmq/","version":"2.6.x","category":"stream-developer-guides"},"frontmatter":{"title":"Stream Application Development on RabbitMQ","description":"Create your own microservices for Stream processing using RabbitMQ and deploy them manually","path":"stream-developer-guides/streams/standalone-stream-rabbitmq/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"b2392640-d4bb-5f50-90c4-a776e1f13b3b","fields":{"path":"/docs/2.6.x/stream-developer-guides/streams/standalone-stream-kafka/","version":"2.6.x","category":"stream-developer-guides"},"frontmatter":{"title":"Stream Application Development on Apache Kafka","description":"Create your own microservices for Stream processing using Apache Kafka and deploy them manually","path":"stream-developer-guides/streams/standalone-stream-kafka/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"8fc394f4-b438-500d-b8ab-535b53b8ab1e","fields":{"path":"/docs/2.6.x/stream-developer-guides/streams/data-flow-stream/","version":"2.6.x","category":"stream-developer-guides"},"frontmatter":{"title":"Stream Processing using Spring Cloud Data Flow","description":"Create and Deploy a Stream Processing Pipeline using Spring Cloud Data Flow","path":"stream-developer-guides/streams/data-flow-stream/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"4ded6921-2628-5cc1-b6a5-5dfb7059b4f4","fields":{"path":"/docs/2.6.x/stream-developer-guides/streams/stream-other-binders/","version":"2.6.x","category":"stream-developer-guides"},"frontmatter":{"title":"Spring Application Development on other Messaging Middleware","description":"Create your own microservices for Stream processing using other messaging middleware such as Google Pub/Sub, Amazon Kinesis, and Solace JMS","path":"stream-developer-guides/streams/stream-other-binders/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"01f6e12a-61b7-5a1a-8b2a-b717c0d31081","fields":{"path":"/docs/2.6.x/stream-developer-guides/programming-models/","version":"2.6.x","category":"stream-developer-guides"},"frontmatter":{"title":"Programming Models","description":"Programming models","path":"stream-developer-guides/programming-models/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"f7fdfd7a-3b6f-5256-95eb-d155d344768c","fields":{"path":"/docs/2.6.x/stream-developer-guides/continuous-delivery/","version":"2.6.x","category":"stream-developer-guides"},"frontmatter":{"title":"Continuous Delivery","description":"CD using Skipper","path":"stream-developer-guides/continuous-delivery/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"29a5a86c-23e2-5ea1-bcb9-915964c6951e","fields":{"path":"/docs/2.6.x/stream-developer-guides/continuous-delivery/cd-basics/","version":"2.6.x","category":"stream-developer-guides"},"frontmatter":{"title":"Continuous Delivery of streaming applications","description":"Continuous Delivery of Streaming applications","path":"stream-developer-guides/continuous-delivery/cd-basics/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"c8560c94-0744-5875-a3fc-9a0262600793","fields":{"path":"/docs/2.6.x/stream-developer-guides/troubleshooting/","version":"2.6.x","category":"stream-developer-guides"},"frontmatter":{"title":"Troubleshooting","description":"Troubleshooting Streams","path":"stream-developer-guides/troubleshooting/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"6082c898-df9d-5ba4-b0d9-e693c0f45b8a","fields":{"path":"/docs/2.6.x/stream-developer-guides/troubleshooting/debugging-stream-apps/","version":"2.6.x","category":"stream-developer-guides"},"frontmatter":{"title":"Debugging Stream Applications","description":"Debugging Stream Applications outside of Data Flow","path":"stream-developer-guides/troubleshooting/debugging-stream-apps/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"b332aa16-2897-534f-b06d-7445ae3743ed","fields":{"path":"/docs/2.6.x/stream-developer-guides/troubleshooting/debugging-scdf-streams/","version":"2.6.x","category":"stream-developer-guides"},"frontmatter":{"title":"Debugging Stream applications deployed by Data Flow","description":"Debugging Data Flow Stream deployments","path":"stream-developer-guides/troubleshooting/debugging-scdf-streams/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"4de0aad5-b76a-5f58-9418-82e6abb6daa0","fields":{"path":"/docs/2.6.x/batch-developer-guides/","version":"2.6.x","category":"batch-developer-guides"},"frontmatter":{"title":"Batch Developer guides ","description":"Learn how to create Batch data pipelines using prebuilt microservices or create your own","path":"batch-developer-guides/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"40856a0d-0eea-5698-b001-2560c7c08986","fields":{"path":"/docs/2.6.x/batch-developer-guides/getting-started/","version":"2.6.x","category":"batch-developer-guides"},"frontmatter":{"title":"Getting Started","description":"Getting Started with Batch","path":"batch-developer-guides/getting-started/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"181a41ff-8e14-5802-a348-3dcbd91207b6","fields":{"path":"/docs/2.6.x/batch-developer-guides/getting-started/task/","version":"2.6.x","category":"batch-developer-guides"},"frontmatter":{"title":"Task Processing","description":"Create and deploy a simple Task pipeline using a prebuilt Task application on your local machine","path":"batch-developer-guides/getting-started/task/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"2e8201c8-0ac3-5cbc-a9ff-4d46568a11ba","fields":{"path":"/docs/2.6.x/batch-developer-guides/batch/","version":"2.6.x","category":"batch-developer-guides"},"frontmatter":{"title":"Batch Development","description":"Batch Developer Guide","path":"batch-developer-guides/batch/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"eef2d991-e898-5491-bcb1-ad963a84b2ae","fields":{"path":"/docs/2.6.x/batch-developer-guides/batch/spring-task/","version":"2.6.x","category":"batch-developer-guides"},"frontmatter":{"title":"Simple Task","description":"Create a simple Spring Boot Application using Spring Cloud Task","path":"batch-developer-guides/batch/spring-task/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"d15169a4-cdbb-5f3c-95d3-34c55864e9a3","fields":{"path":"/docs/2.6.x/batch-developer-guides/batch/spring-batch/","version":"2.6.x","category":"batch-developer-guides"},"frontmatter":{"title":"Spring Batch Jobs","description":"Create a Spring Batch Job","path":"batch-developer-guides/batch/spring-batch/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"e790e5f2-09a4-5474-a09c-c0060231388a","fields":{"path":"/docs/2.6.x/batch-developer-guides/batch/data-flow-simple-task/","version":"2.6.x","category":"batch-developer-guides"},"frontmatter":{"title":"Register and Launch a Spring Cloud Task application using Data Flow","description":"Register and Launch a Spring Cloud Task application using Data Flow","path":"batch-developer-guides/batch/data-flow-simple-task/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"2f90faa8-a4c1-5997-96d2-4f97103be151","fields":{"path":"/docs/2.6.x/batch-developer-guides/batch/data-flow-spring-batch/","version":"2.6.x","category":"batch-developer-guides"},"frontmatter":{"title":"Register and launch a Spring Batch application using Data Flow","description":"Register and launch a Spring Batch application using Data Flow","path":"batch-developer-guides/batch/data-flow-spring-batch/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"fd94641a-89b7-5567-8263-357f50ecc764","fields":{"path":"/docs/2.6.x/batch-developer-guides/batch/data-flow-composed-task/","version":"2.6.x","category":"batch-developer-guides"},"frontmatter":{"title":"Create and launch a Composed Task using Data Flow","description":"Create and launch a Composed Task using Data Flow","path":"batch-developer-guides/batch/data-flow-composed-task/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"afe38fbe-1362-51fd-9d87-4e3326859ba7","fields":{"path":"/docs/2.6.x/batch-developer-guides/batch/data-flow-simple-task-kubernetes/","version":"2.6.x","category":"batch-developer-guides"},"frontmatter":{"title":"Deploying a task application on Kubernetes with Data Flow","description":"Guide to deploying spring-cloud-stream-task applications on Kubernetes using Spring Cloud Data Flow","path":"batch-developer-guides/batch/data-flow-simple-task-kubernetes/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"33858feb-00dd-5223-bd77-da1894c5c453","fields":{"path":"/docs/2.6.x/batch-developer-guides/batch/data-flow-simple-task-cloudfoundry/","version":"2.6.x","category":"batch-developer-guides"},"frontmatter":{"title":"Deploying a task application on Cloud Foundry using Spring Cloud Data Flow","description":"Guide to deploying spring-cloud-stream-task applications on Cloud Foundry using Spring Cloud Data Flow","path":"batch-developer-guides/batch/data-flow-simple-task-cloudfoundry/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"a4c38b30-a881-51c7-b7c7-ad2c2eab6127","fields":{"path":"/docs/2.6.x/batch-developer-guides/continuous-deployment/","version":"2.6.x","category":"batch-developer-guides"},"frontmatter":{"title":"Continuous Deployment","description":"Continuous Deployment for task applications","path":"batch-developer-guides/continuous-deployment/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"89a04294-fb0e-5411-9adf-ef7dbcc5b2ab","fields":{"path":"/docs/2.6.x/batch-developer-guides/continuous-deployment/cd-basics/","version":"2.6.x","category":"batch-developer-guides"},"frontmatter":{"title":"Continuous Deployment of task applications","description":"This section discusses how to use Continuous Deployment of Tasks in SCDF","path":"batch-developer-guides/continuous-deployment/cd-basics/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"472bfd60-d1e4-5d78-bce1-7fbcac20a106","fields":{"path":"/docs/2.6.x/batch-developer-guides/troubleshooting/","version":"2.6.x","category":"batch-developer-guides"},"frontmatter":{"title":"Troubleshooting","description":"Troubleshooting Batch Jobs","path":"batch-developer-guides/troubleshooting/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"b3319e09-bc9a-58ac-ac3f-d25edafcc8eb","fields":{"path":"/docs/2.6.x/batch-developer-guides/troubleshooting/debugging-task-apps/","version":"2.6.x","category":"batch-developer-guides"},"frontmatter":{"title":"Debugging Batch applications","description":"Debugging Batch applications","path":"batch-developer-guides/troubleshooting/debugging-task-apps/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"70e3c3cf-5558-581e-8f8c-fe7665bc89d1","fields":{"path":"/docs/2.6.x/batch-developer-guides/troubleshooting/debugging-scdf-tasks/","version":"2.6.x","category":"batch-developer-guides"},"frontmatter":{"title":"Debugging Batch applications deployed by Data Flow","description":"Debugging Batch applications deployed by Data Flow","path":"batch-developer-guides/troubleshooting/debugging-scdf-tasks/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"d7b32b66-26ca-5f77-b4c8-faa482449080","fields":{"path":"/docs/2.6.x/feature-guides/","version":"2.6.x","category":"feature-guides"},"frontmatter":{"title":"Feature guides","description":"High level overview of Data Flow Features","path":"feature-guides/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"c78c28bf-a6d5-53b5-bc0a-4aeb6428e293","fields":{"path":"/docs/2.6.x/feature-guides/general/","version":"2.6.x","category":"feature-guides"},"frontmatter":{"title":"General","description":"General Features in Data Flow","path":"feature-guides/general/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"4d39f197-0252-5cdf-88f7-796e8ddd772a","fields":{"path":"/docs/2.6.x/feature-guides/general/application-metadata/","version":"2.6.x","category":"feature-guides"},"frontmatter":{"title":"Application Metadata","description":"Create and use application properties metadata","path":"feature-guides/general/application-metadata/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"394b1c87-f6b9-5611-a670-74158473d94e","fields":{"path":"/docs/2.6.x/feature-guides/streams/","version":"2.6.x","category":"feature-guides"},"frontmatter":{"title":"Streams","description":"Stream Features in Data Flow","path":"feature-guides/streams/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"6c7e764e-1682-59d7-9dd6-89eeb7291700","fields":{"path":"/docs/2.6.x/feature-guides/streams/deployment-properties/","version":"2.6.x","category":"feature-guides"},"frontmatter":{"title":"Deployment Properties","description":"Initiate a stream deployment with deployment property overrides","path":"feature-guides/streams/deployment-properties/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"8cdf006d-4a35-5c0e-b3c1-62689c101fe6","fields":{"path":"/docs/2.6.x/feature-guides/streams/function-composition/","version":"2.6.x","category":"feature-guides"},"frontmatter":{"title":"Composing Functions","description":"Daisy-chain Java functions in an existing Spring Cloud Stream application","path":"feature-guides/streams/function-composition/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"e7ac087d-3d96-5a5b-a217-55d3cbc5fca3","fields":{"path":"/docs/2.6.x/feature-guides/streams/named-destinations/","version":"2.6.x","category":"feature-guides"},"frontmatter":{"title":"Named Destinations","description":"Use the Named Destinations to interact with the Topics/Queues directly","path":"feature-guides/streams/named-destinations/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"31cf45b3-bb88-55ab-9090-b345b99bc785","fields":{"path":"/docs/2.6.x/feature-guides/streams/monitoring/","version":"2.6.x","category":"feature-guides"},"frontmatter":{"title":"Stream Monitoring","description":"Monitoring streaming data pipelines with Prometheus and InfluxDB","path":"feature-guides/streams/monitoring/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"152fe9be-20da-5dc5-82bc-260e301b6583","fields":{"path":"/docs/2.6.x/feature-guides/streams/stream-application-dsl/","version":"2.6.x","category":"feature-guides"},"frontmatter":{"title":"Stream Application DSL","description":"Learn how to use the Stream Application DSL","path":"feature-guides/streams/stream-application-dsl/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"03ad3b84-bfd0-56cb-b9a0-118ed454cb37","fields":{"path":"/docs/2.6.x/feature-guides/streams/labels/","version":"2.6.x","category":"feature-guides"},"frontmatter":{"title":"Labeling Applications","description":"Label the stream applications to uniquely interact with them","path":"feature-guides/streams/labels/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"6a22ede4-9643-55c9-8c7c-7987b8c6309d","fields":{"path":"/docs/2.6.x/feature-guides/streams/application-count/","version":"2.6.x","category":"feature-guides"},"frontmatter":{"title":"Application Count","description":"Initiate stream deployment with multiple application instances","path":"feature-guides/streams/application-count/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"9705414f-cfa2-5928-ab08-5d4343443bd1","fields":{"path":"/docs/2.6.x/feature-guides/streams/fanin-fanout/","version":"2.6.x","category":"feature-guides"},"frontmatter":{"title":"Fan-in and Fan-out","description":"Publish and subscribe to multiple destinations using the fan-in and fan-out capabilities","path":"feature-guides/streams/fanin-fanout/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"dbd86818-7801-5f87-a49f-9be67b912a6d","fields":{"path":"/docs/2.6.x/feature-guides/streams/partitioning/","version":"2.6.x","category":"feature-guides"},"frontmatter":{"title":"Data Partitioning","description":"Learn more about data partitioning support to build stateful streaming data pipelines","path":"feature-guides/streams/partitioning/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"a7310690-ab0f-55bb-861b-3184d0bc0dd8","fields":{"path":"/docs/2.6.x/feature-guides/streams/scaling/","version":"2.6.x","category":"feature-guides"},"frontmatter":{"title":"Scaling","description":"Scaling streaming data pipeline with Spring Cloud Data Flow","path":"feature-guides/streams/scaling/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"686c7331-267e-5e19-b340-a748d20e1de2","fields":{"path":"/docs/2.6.x/feature-guides/streams/java-dsl/","version":"2.6.x","category":"feature-guides"},"frontmatter":{"title":"Java DSL","description":"Programmatically create streams using the Java DSL","path":"feature-guides/streams/java-dsl/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"3de6ad19-6800-554e-9482-f93ad877682a","fields":{"path":"/docs/2.6.x/feature-guides/streams/taps/","version":"2.6.x","category":"feature-guides"},"frontmatter":{"title":"Tapping a Stream","description":"Create a stream from another stream without interrupting the data processing","path":"feature-guides/streams/taps/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"2ebd228a-2f1c-5c3f-86c3-6d0e7ebeb60c","fields":{"path":"/docs/2.6.x/feature-guides/batch/","version":"2.6.x","category":"feature-guides"},"frontmatter":{"title":"Batch","description":"Batch Features in Data Flow","path":"feature-guides/batch/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"f18c13dd-0967-5258-a9ed-2d0effb06a94","fields":{"path":"/docs/2.6.x/feature-guides/batch/deployment-properties/","version":"2.6.x","category":"feature-guides"},"frontmatter":{"title":"Deployment Properties","description":"Initiate a Batch deployment with deployment property overrides","path":"feature-guides/batch/deployment-properties/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"8ceffe7c-207a-5449-b416-2f4610608174","fields":{"path":"/docs/2.6.x/feature-guides/batch/scheduling/","version":"2.6.x","category":"feature-guides"},"frontmatter":{"title":"Scheduling Batch Jobs","description":"Learn how to schedule Batch Jobs","path":"feature-guides/batch/scheduling/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"6d1d3059-6972-521c-aca8-ec6d05f1cde5","fields":{"path":"/docs/2.6.x/feature-guides/batch/partitioning/","version":"2.6.x","category":"feature-guides"},"frontmatter":{"title":"Remote Partitioned Batch Job","description":"Learn more about partitioning support for Batch Jobs","path":"feature-guides/batch/partitioning/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"56e21312-3401-500b-b7d3-e7c0243f5036","fields":{"path":"/docs/2.6.x/feature-guides/batch/monitoring/","version":"2.6.x","category":"feature-guides"},"frontmatter":{"title":"Task Monitoring","description":"Monitoring task data pipelines with InfluxDB","path":"feature-guides/batch/monitoring/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"63fd40ad-444b-5595-a758-ee3bc06f3470","fields":{"path":"/docs/2.6.x/feature-guides/batch/restarting/","version":"2.6.x","category":"feature-guides"},"frontmatter":{"title":"Restarting Batch Jobs","description":"Learn how to restart Batch Jobs","path":"feature-guides/batch/restarting/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"e8d7213f-842d-55b9-968e-fa9468fbb1b7","fields":{"path":"/docs/2.6.x/feature-guides/batch/composed-task/","version":"2.6.x","category":"feature-guides"},"frontmatter":{"title":"Composed Tasks","description":"Learn how to create and manage composed tasks","path":"feature-guides/batch/composed-task/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"4d0f7f2b-fabf-550a-953c-cac43dbf9263","fields":{"path":"/docs/2.6.x/recipes/","version":"2.6.x","category":"recipes"},"frontmatter":{"title":"Recipes","description":"Recipes that help solve some common use-cases","path":"recipes/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"3de792ac-05ae-5ced-8bed-41e91c752158","fields":{"path":"/docs/2.6.x/recipes/polyglot/","version":"2.6.x","category":"recipes"},"frontmatter":{"title":"Polyglot","description":"Using multiple programming languages","path":"recipes/polyglot/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"36ff7cbd-d490-5e5c-8f3c-98219c24ab86","fields":{"path":"/docs/2.6.x/recipes/polyglot/processor/","version":"2.6.x","category":"recipes"},"frontmatter":{"title":"Python Stream Processor","description":"Python Application as a Data Flow Stream Processor","path":"recipes/polyglot/processor/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"d077e364-55a8-5626-a175-87aaba3ed076","fields":{"path":"/docs/2.6.x/recipes/polyglot/task/","version":"2.6.x","category":"recipes"},"frontmatter":{"title":"Python Task","description":"Create and Deploy a Python Task","path":"recipes/polyglot/task/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"6a27b0d6-4644-5a20-bc16-36b349b625ab","fields":{"path":"/docs/2.6.x/recipes/polyglot/app/","version":"2.6.x","category":"recipes"},"frontmatter":{"title":"Python Application","description":"Create and Deploy a Python Application in a Stream","path":"recipes/polyglot/app/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"922bc0b9-e7d9-517f-b90e-3d708e2e368b","fields":{"path":"/docs/2.6.x/recipes/rabbitmq/","version":"2.6.x","category":"recipes"},"frontmatter":{"title":"RabbitMQ","description":"RabbitMQ","path":"recipes/rabbitmq/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"824ba154-1675-5a56-9cb1-198145138085","fields":{"path":"/docs/2.6.x/recipes/rabbitmq/rabbit-source-sink/","version":"2.6.x","category":"recipes"},"frontmatter":{"title":"RabbitMQ as Source and Sink","description":"RabbitMQ as Source and Sink + RabbitMQ binder","path":"recipes/rabbitmq/rabbit-source-sink/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"8cea6d67-6070-541c-bdf4-eb8bb7de2d8b","fields":{"path":"/docs/2.6.x/recipes/kafka/","version":"2.6.x","category":"recipes"},"frontmatter":{"title":"Apache Kafka","description":"Kafka","path":"recipes/kafka/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"591d39f1-8de9-5e97-9ece-b6f04224f819","fields":{"path":"/docs/2.6.x/recipes/kafka/ext-kafka-cluster-cf/","version":"2.6.x","category":"recipes"},"frontmatter":{"title":"External Kafka Cluster","description":"Connect to an external Kafka Cluster from Cloud Foundry","path":"recipes/kafka/ext-kafka-cluster-cf/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"4e811c1a-001d-55e5-8e16-06e7b512b33c","fields":{"path":"/docs/2.6.x/recipes/kinesis/","version":"2.6.x","category":"recipes"},"frontmatter":{"title":"Amazon Kinesis","description":"Amazon Kinesis","path":"recipes/kinesis/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"7ba60f0d-484c-5366-b8fe-79ff0e618f86","fields":{"path":"/docs/2.6.x/recipes/kinesis/simple-producer-consumer/","version":"2.6.x","category":"recipes"},"frontmatter":{"title":"Amazon Kinesis Binder","description":"A sample of Spring Cloud Stream + Amazon Kinesis Binder in action","path":"recipes/kinesis/simple-producer-consumer/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"1ee618fe-64d0-579b-a77d-9257e8860731","fields":{"path":"/docs/2.6.x/recipes/multi-platform-deployment/","version":"2.6.x","category":"recipes"},"frontmatter":{"title":"Multiple Platform Deployments","description":"Multiple Platform Deployments","path":"recipes/multi-platform-deployment/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"2ee55850-fe0d-556c-8da1-b382c2dfbca7","fields":{"path":"/docs/2.6.x/recipes/multi-platform-deployment/multiple-platform-accounts/","version":"2.6.x","category":"recipes"},"frontmatter":{"title":"Role of Multiple Platform Deployments","description":"A walk-through of multiple platform requirements and the configurations for Cloud Foundry and Kubernetes","path":"recipes/multi-platform-deployment/multiple-platform-accounts","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"f9c6b7a7-dd7c-5ad0-96db-40a0da32ff09","fields":{"path":"/docs/2.6.x/recipes/multi-platform-deployment/multi-platform-task/","version":"2.6.x","category":"recipes"},"frontmatter":{"title":"Multiple Platform support for Tasks","description":"Learn how to launch and schedule tasks across multiple platforms","path":"recipes/multi-platform-deployment/multi-platform-task","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"168e6851-9799-5f87-a048-6b85974a5b2b","fields":{"path":"/docs/2.6.x/recipes/scaling/","version":"2.6.x","category":"recipes"},"frontmatter":{"title":"Scaling","description":"Prometheus and Data Flow to autoscale streaming data pipelines","path":"recipes/scaling/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"c069825c-a660-51aa-a17e-bf2e5529bd46","fields":{"path":"/docs/2.6.x/recipes/scaling/manual-scaling/","version":"2.6.x","category":"recipes"},"frontmatter":{"title":"Manual Scaling","description":"Scale applications using SCDF Shell","path":"recipes/scaling/manual-scaling/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"655b0e01-0075-5e02-940f-73562c1df09c","fields":{"path":"/docs/2.6.x/recipes/scaling/autoscaling/","version":"2.6.x","category":"recipes"},"frontmatter":{"title":"Autoscaling","description":"Autoscale streaming data pipeline with SCDF and Prometheus","path":"recipes/scaling/autoscaling/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"a24382a8-69c7-516b-be4e-3005fd9e4e1d","fields":{"path":"/docs/2.6.x/recipes/batch/","version":"2.6.x","category":"recipes"},"frontmatter":{"title":"Batch","description":"Using Spring Cloud Data Flow with Spring Batch","path":"recipes/batch/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"bef282f4-812e-5380-95ad-a6158cd664e5","fields":{"path":"/docs/2.6.x/recipes/batch/batch-only-mode/","version":"2.6.x","category":"recipes"},"frontmatter":{"title":"Batch-only Mode","description":"Set up Spring Cloud Data Flow to use only batch and not streams","path":"recipes/batch/batch-only-mode/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"3e3d1519-f305-513b-91d8-8c170101c7d3","fields":{"path":"/docs/2.6.x/recipes/batch/sftp-to-jdbc/","version":"2.6.x","category":"recipes"},"frontmatter":{"title":"SFTP to JDBC","description":"Ingest Files from SFTP to a JDBC data store using Data Flow and Spring Batch","path":"recipes/batch/sftp-to-jdbc/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"5e406a25-183a-5faf-b106-2727add47aa9","fields":{"path":"/docs/2.6.x/recipes/functional-apps/","version":"2.6.x","category":"recipes"},"frontmatter":{"title":"Functional Applications","description":"Using Functional Approach in Spring Cloud Stream applications","path":"recipes/functional-apps/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"060d1319-66a9-5a8a-8ed0-9c9f4e0e0fc0","fields":{"path":"/docs/2.6.x/recipes/functional-apps/scst-function-bindings/","version":"2.6.x","category":"recipes"},"frontmatter":{"title":"Functional Applications","description":"Configuring the Spring Cloud Stream Functional applications","path":"recipes/functional-apps/scst-function-bindings/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"6c3c3ea4-da1d-5762-87e6-2cfe62f63319","fields":{"path":"/docs/2.6.x/recipes/cloud-providers/","version":"2.6.x","category":"recipes"},"frontmatter":{"title":"Cloud Providers","description":"Using functionality provided by cloud providers","path":"recipes/cloud-providers/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"14e103a3-61f6-5fc8-b499-854b4bd3d76a","fields":{"path":"/docs/2.6.x/recipes/cloud-providers/gke-regional-clusters/","version":"2.6.x","category":"recipes"},"frontmatter":{"title":"GKE Regional Clusters","description":"Deploying Spring Cloud Data Flow to a GKE Regional Cluster","path":"recipes/cloud-providers/gke-regional-clusters/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"16a7f267-5b9f-5261-b7f8-6846ba920ed7","fields":{"path":"/docs/2.6.x/resources/","version":"2.6.x","category":"resources"},"frontmatter":{"title":"Resources","description":"Sample Applications, References Docs, Videos, Blogs...","path":"resources/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"15ce6d96-f8ce-55e1-8536-210a7451383b","fields":{"path":"/docs/2.6.x/resources/reference-docs/","version":"2.6.x","category":"resources"},"frontmatter":{"title":"Reference Documentation","description":"Collection of reference guides for Spring Cloud Data Flow","path":"resources/reference-docs/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"09359c52-7d8f-58fe-a9cf-8685a9f53c1b","fields":{"path":"/docs/2.6.x/resources/samples/","version":"2.6.x","category":"resources"},"frontmatter":{"title":"Samples","description":"Collection of samples","path":"resources/samples/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"8e9e653b-b304-5646-8a5f-d2b2734527a5","fields":{"path":"/docs/2.6.x/resources/faq/","version":"2.6.x","category":"resources"},"frontmatter":{"title":"Frequently Asked Questions","description":"","path":"resources/faq/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"2f552280-40b8-5962-bec1-461854e0c533","fields":{"path":"/docs/2.6.x/applications/","version":"2.6.x","category":"applications"},"frontmatter":{"title":"Applications","description":"Using stream and task applications","path":"applications/","meta_title":null,"meta_description":null,"keywords":null}}},{"node":{"id":"024c00a7-58c5-565c-96c6-21444383546b","fields":{"path":"/docs/2.6.x/applications/pre-packaged/","version":"2.6.x","category":"applications"},"frontmatter":{"title":"Pre-packaged Applications","description":"Pre-packaged stream and task applications","path":"applications/pre-packaged","meta_title":null,"meta_description":null,"keywords":["application","pre-packaged"]}}}]},"page":{"html":"<h2 id=\"helm-installation\" style=\"position:relative;\"><a href=\"#helm-installation\" aria-label=\"helm installation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Helm Installation</h2>\n<div class=\"admonition note\"><p>The current Spring Cloud Data Flow chart is based on Helm 2.\nThe Helm project will be ending support for Helm 2 in November of 2020.\nAt that time the Spring Cloud Data Flow chart will be based on Helm 3, dropping support for Helm 2.</p><p>Migration steps from Helm 2 to Helm 3 are required.\nIn preparation for the migration, it is advised to read the <a href=\"https://helm.sh/docs/topics/v2_v3_migration/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Helm v2 to v3 Migration Guide</a> for more information.\nAdditionally, some helpful tips on data migration and upgrades can be found in the <a href=\"https://docs.bitnami.com/tutorials/resolve-helm2-helm3-post-migration-issues/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">post migration issues</a> article.</p></div>\n<p>Spring Cloud Data Flow offers a <a href=\"https://hub.kubeapps.com/charts/stable/spring-cloud-data-flow\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Helm Chart</a>\nfor deploying the Spring Cloud Data Flow server and its required services to a Kubernetes Cluster.</p>\n<p>The following sections cover how to initialize <code class=\"language-text\">Helm</code> and install Spring Cloud Data Flow on a Kubernetes cluster.</p>\n<div class=\"admonition tip\"><p>If using Minikube, see <a href=\"/docs/2.6.x/installation/kubernetes/creating-a-cluster/#setting-minikube-resources\">Setting Minikube Resources</a> for details on CPU and RAM resource requirements.</p></div>\n<h3 id=\"installing-helm\" style=\"position:relative;\"><a href=\"#installing-helm\" aria-label=\"installing helm permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Installing Helm</h3>\n<p>The Spring Cloud Data Flow Helm chart is currently tested against Helm 2.\n<code class=\"language-text\">Helm</code> is comprised of two components: the client (Helm) and the server (Tiller).\nThe <code class=\"language-text\">Helm</code> client runs on your local machine and can be installed by following the instructions found <a href=\"https://v2.helm.sh/docs/install/#installing-helm\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">here</a>.\nIf Tiller has not been installed on your cluster, run the following to create a service account and the <code class=\"language-text\">Helm</code> init client command:</p>\n<div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl create serviceaccount tiller -n kube-system\nkubectl create clusterrolebinding tiller --clusterrole cluster-admin --serviceaccount kube-system:tiller\nhelm init --wait --service-account tiller</code></pre></div>\n      </div>\n<div class=\"admonition note\"><p>Please see the <a href=\"https://v2.helm.sh/docs/securing_installation/#securing-your-helm-installation\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Helm documentation</a> for additional Helm security configuration.</p></div>\n<div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">helm repo update</code></pre></div>\n      </div>\n<p>To verify that the <code class=\"language-text\">Tiller</code> pod is running, run the following command:</p>\n<div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl get pod --namespace kube-system</code></pre></div>\n      </div>\n<p>You should see the <code class=\"language-text\">Tiller</code> pod running.</p>\n<h3 id=\"installing-the-spring-cloud-data-flow-server-and-required-services\" style=\"position:relative;\"><a href=\"#installing-the-spring-cloud-data-flow-server-and-required-services\" aria-label=\"installing the spring cloud data flow server and required services permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Installing the Spring Cloud Data Flow Server and Required Services</h3>\n<h1 id=\"spring-cloud-data-flow-chart\" style=\"position:relative;\"><a href=\"#spring-cloud-data-flow-chart\" aria-label=\"spring cloud data flow chart permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Spring Cloud Data Flow Chart</h1>\n<p><a href=\"https://cloud.spring.io/spring-cloud-dataflow/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Spring Cloud Data Flow</a> is a toolkit for microservices-based Streaming and Batch data processing pipelines in Cloud Foundry and Kubernetes</p>\n<p>Data processing pipelines consist of <a href=\"https://projects.spring.io/spring-boot/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Spring Boot</a> apps, built using the <a href=\"https://cloud.spring.io/spring-cloud-stream/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Spring Cloud Stream</a> or <a href=\"https://cloud.spring.io/spring-cloud-task/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Spring Cloud Task</a> microservice frameworks. This makes Spring Cloud Data Flow suitable for a range of data processing use cases, from import/export to event streaming and predictive analytics.</p>\n<h2 id=\"this-helm-chart-is-deprecated\" style=\"position:relative;\"><a href=\"#this-helm-chart-is-deprecated\" aria-label=\"this helm chart is deprecated permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>This Helm chart is deprecated</h2>\n<p>Given the <a href=\"https://github.com/helm/charts#deprecation-timeline\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">stable</code> deprecation timeline</a>, the Bitnami maintained Spring Cloud Data Flow Helm chart is now located at <a href=\"https://github.com/bitnami/charts/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">bitnami/charts</a>.</p>\n<p>The Bitnami repository is already included in the Hubs and we will continue providing the same cadence of updates, support, etc that we've been keeping here these years. Installation instructions are very similar, just adding the <em>bitnami</em> repo and using it during the installation (<code class=\"language-text\">bitnami/&lt;chart></code> instead of <code class=\"language-text\">stable/&lt;chart></code>)</p>\n<div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ helm repo <span class=\"token function\">add</span> bitnami https://charts.bitnami.com/bitnami\n$ helm <span class=\"token function\">install</span> my-release bitnami/<span class=\"token operator\">&lt;</span>chart<span class=\"token operator\">></span>           <span class=\"token comment\"># Helm 3</span>\n$ helm <span class=\"token function\">install</span> --name my-release bitnami/<span class=\"token operator\">&lt;</span>chart<span class=\"token operator\">></span>    <span class=\"token comment\"># Helm 2</span></code></pre></div>\n      </div>\n<p>To update an exisiting <em>stable</em> deployment with a chart hosted in the bitnami repository you can execute</p>\n<div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ helm repo <span class=\"token function\">add</span> bitnami https://charts.bitnami.com/bitnami\n$ helm upgrade my-release bitnami/<span class=\"token operator\">&lt;</span>chart<span class=\"token operator\">></span></code></pre></div>\n      </div>\n<p>Issues and PRs related to the chart itself will be redirected to <code class=\"language-text\">bitnami/charts</code> GitHub repository. In the same way, we'll be happy to answer questions related to this migration process in <a href=\"https://github.com/helm/charts/issues/20969\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">this issue</a> created as a common place for discussion.</p>\n<h2 id=\"chart-details\" style=\"position:relative;\"><a href=\"#chart-details\" aria-label=\"chart details permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Chart Details</h2>\n<p>This chart will provision a fully functional and fully featured Spring Cloud Data Flow installation\nthat can deploy and manage data processing pipelines in the cluster that it is deployed to.</p>\n<p>Either the default MySQL deployment or an external database can be used as the data store for Spring Cloud Data Flow state and either RabbitMQ or Kafka can be used as the messaging layer for streaming apps to communicate with one another.</p>\n<p>For more information on Spring Cloud Data Flow and its capabilities, see it's <a href=\"https://dataflow.spring.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">documentation</a>.</p>\n<h2 id=\"prerequisites\" style=\"position:relative;\"><a href=\"#prerequisites\" aria-label=\"prerequisites permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Prerequisites</h2>\n<p>Assumes that serviceAccount credentials are available so the deployed Data Flow server can access the API server (Works on GKE and Minikube by default). See <a href=\"https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Configure Service Accounts for Pods</a></p>\n<h2 id=\"installing-the-chart\" style=\"position:relative;\"><a href=\"#installing-the-chart\" aria-label=\"installing the chart permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Installing the Chart</h2>\n<p>To install the chart with the release name <code class=\"language-text\">my-release</code>:</p>\n<div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ helm <span class=\"token function\">install</span> --name my-release stable/spring-cloud-data-flow</code></pre></div>\n      </div>\n<p>If you are using a cluster that does not have a load balancer (like Minikube) then you can install using a NodePort:</p>\n<div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ helm <span class=\"token function\">install</span> --name my-release --set server.service.type<span class=\"token operator\">=</span>NodePort stable/spring-cloud-data-flow</code></pre></div>\n      </div>\n<p>To restrict the load balancer to an IP address range:</p>\n<div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ helm <span class=\"token function\">install</span> --name my-release  --set server.service.loadBalancerSourceRanges<span class=\"token operator\">=</span><span class=\"token string\">'[10.0.0.0/8]'</span> stable/spring-cloud-data-flow</code></pre></div>\n      </div>\n<h3 id=\"data-store\" style=\"position:relative;\"><a href=\"#data-store\" aria-label=\"data store permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Data Store</h3>\n<p>By default, MySQL is deployed with this chart. However, if you wish to use an external database, please use the following <code class=\"language-text\">set</code> flags to the <code class=\"language-text\">helm</code> command to disable MySQL deployment, for example:</p>\n<p><code class=\"language-text\">--set mysql.enabled=false</code></p>\n<p>In addition, you are required to set all fields listed in <a href=\"#external-database-configuration\">External Database Configuration</a>.</p>\n<h3 id=\"messaging-layer\" style=\"position:relative;\"><a href=\"#messaging-layer\" aria-label=\"messaging layer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Messaging Layer</h3>\n<p>There are three messaging layers available in this chart:</p>\n<ul>\n<li>RabbitMQ (default)</li>\n<li>RabbitMQ HA</li>\n<li>Kafka</li>\n</ul>\n<p>To change the messaging layer to a highly available (HA) version of RabbitMQ, use the following <code class=\"language-text\">set</code> flags to the <code class=\"language-text\">helm</code> command, for example:</p>\n<p><code class=\"language-text\">--set rabbitmq-ha.enabled=true,rabbitmq.enabled=false</code></p>\n<p>Alternatively, to change the messaging layer to Kafka, use the following <code class=\"language-text\">set</code> flags to the <code class=\"language-text\">helm</code> command, for example:</p>\n<p><code class=\"language-text\">--set kafka.enabled=true,rabbitmq.enabled=false</code></p>\n<p>Only one messaging layer can be used at a given time. If RabbitMQ and Kafka are enabled, both charts will be installed with RabbitMQ being used in the deployment.</p>\n<p>Note that this chart pulls in many different Docker images so can take a while to fully install.</p>\n<h3 id=\"feature-toggles\" style=\"position:relative;\"><a href=\"#feature-toggles\" aria-label=\"feature toggles permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Feature Toggles</h3>\n<p>If you only need to deploy tasks and schedules, streams can be disabled:</p>\n<p><code class=\"language-text\">--set features.streaming.enabled=false --set rabbitmq.enabled=false</code></p>\n<p>If you only need to deploy streams, tasks and schedules can be disabled:</p>\n<p><code class=\"language-text\">--set features.batch.enabled=false</code></p>\n<p>NOTE: Both <code class=\"language-text\">features.streaming.enabled</code> and <code class=\"language-text\">features.batch.enabled</code> should not be set to <code class=\"language-text\">false</code> at the same time.</p>\n<p>Streaming and batch applications can be monitored through Prometheus and Grafana. To deploy these components and enable monitoring, set the following:</p>\n<p><code class=\"language-text\">--set features.monitoring.enabled=true</code></p>\n<p>When using Minikube, the Grafana URL can be obtained for example, via:</p>\n<p><code class=\"language-text\">minikube service my-release-grafana --url</code></p>\n<p>On a platform that provides a LoadBalancer such as GKE, the following can be checked against until the <code class=\"language-text\">EXTERNAL-IP</code> field is populated with the assigned load balancer IP address:</p>\n<p><code class=\"language-text\">kubectl get svc my-release-grafana</code></p>\n<p>See the Grafana table below for default credentials and override parameters.</p>\n<h3 id=\"using-an-ingress\" style=\"position:relative;\"><a href=\"#using-an-ingress\" aria-label=\"using an ingress permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Using an Ingress</h3>\n<p>If you would like to use an Ingress instead of having the services use the <code class=\"language-text\">LoadBalancer</code> type there are a few things to consider.</p>\n<p>First you need to have an <a href=\"https://kubernetes.io/docs/concepts/services-networking/ingress-controllers/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Ingress Controller</a> installed in your cluster. If you don't already have one instaled, you can use the following helm command to install an NGINX Ingress Controller:</p>\n<div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl create namespace nginx-ingress\nhelm <span class=\"token function\">install</span> --name nginx-ingress --namespace nginx-ingress stable/nginx-ingress</code></pre></div>\n      </div>\n<p>You can look up the IP address used by the NGINX Ingress Controller with:</p>\n<div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">ingress</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span>kubectl get svc nginx-ingress-controller -n nginx-ingress -ojsonpath<span class=\"token operator\">=</span><span class=\"token string\">'{.status.loadBalancer.ingress[0].ip}'</span><span class=\"token variable\">)</span></span></code></pre></div>\n      </div>\n<p>This is useful if you would like to use <code class=\"language-text\">xip.io</code> instead of your own DNS resolution. The folowing options assume that you will use <code class=\"language-text\">xip.io</code> but you can replace the host values below with your own DNS hosts if you prefer.</p>\n<p>To enable the creation of an <code class=\"language-text\">Ingress</code> resource and configure the services to use <code class=\"language-text\">ClusterIP</code> type use the following set options in your helm install command:</p>\n<div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">  --set server.service.type<span class=\"token operator\">=</span>ClusterIP <span class=\"token punctuation\">\\</span>\n  --set ingress.enabled<span class=\"token operator\">=</span>true <span class=\"token punctuation\">\\</span>\n  --set ingress.protocol<span class=\"token operator\">=</span>http <span class=\"token punctuation\">\\</span>\n  --set ingress.server.host<span class=\"token operator\">=</span>scdf.<span class=\"token variable\">${ingress}</span>.xip.io <span class=\"token punctuation\">\\</span></code></pre></div>\n      </div>\n<p>If you want to use an <code class=\"language-text\">Ingress</code> with the monitoring feature enabled, then use thes options instead:</p>\n<div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">  --set features.monitoring.enabled<span class=\"token operator\">=</span>true <span class=\"token punctuation\">\\</span>\n  --set server.service.type<span class=\"token operator\">=</span>ClusterIP <span class=\"token punctuation\">\\</span>\n  --set grafana.service.type<span class=\"token operator\">=</span>ClusterIP <span class=\"token punctuation\">\\</span>\n  --set prometheus.proxy.service.type<span class=\"token operator\">=</span>ClusterIP <span class=\"token punctuation\">\\</span>\n  --set ingress.enabled<span class=\"token operator\">=</span>true <span class=\"token punctuation\">\\</span>\n  --set ingress.protocol<span class=\"token operator\">=</span>http <span class=\"token punctuation\">\\</span>\n  --set ingress.server.host<span class=\"token operator\">=</span>scdf.<span class=\"token variable\">${ingress}</span>.xip.io <span class=\"token punctuation\">\\</span>\n  --set ingress.grafana.host<span class=\"token operator\">=</span>grafana.<span class=\"token variable\">${ingress}</span>.xip.io <span class=\"token punctuation\">\\</span></code></pre></div>\n      </div>\n<h2 id=\"configuration\" style=\"position:relative;\"><a href=\"#configuration\" aria-label=\"configuration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configuration</h2>\n<p>The following tables list the configurable parameters and their default values.</p>\n<h3 id=\"rbac-configuration\" style=\"position:relative;\"><a href=\"#rbac-configuration\" aria-label=\"rbac configuration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>RBAC Configuration</h3>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>rbac.create</td>\n<td>Create RBAC configurations</td>\n<td>true</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"serviceaccount-configuration\" style=\"position:relative;\"><a href=\"#serviceaccount-configuration\" aria-label=\"serviceaccount configuration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ServiceAccount Configuration</h3>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>serviceAccount.create</td>\n<td>Create ServiceAccount</td>\n<td>true</td>\n</tr>\n<tr>\n<td>serviceAccount.name</td>\n<td>ServiceAccount name</td>\n<td>(generated if not specified)</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"data-flow-server-configuration\" style=\"position:relative;\"><a href=\"#data-flow-server-configuration\" aria-label=\"data flow server configuration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Data Flow Server Configuration</h3>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>server.version</td>\n<td>The version/tag of the Data Flow server</td>\n<td>2.6.0</td>\n</tr>\n<tr>\n<td>server.imagePullPolicy</td>\n<td>The imagePullPolicy of the Data Flow server</td>\n<td>IfNotPresent</td>\n</tr>\n<tr>\n<td>server.service.type</td>\n<td>The service type for the Data Flow server</td>\n<td>LoadBalancer</td>\n</tr>\n<tr>\n<td>server.service.annotations</td>\n<td>Extra annotations for service resource</td>\n<td>{}</td>\n</tr>\n<tr>\n<td>server.service.externalPort</td>\n<td>The external port for the Data Flow server</td>\n<td>80</td>\n</tr>\n<tr>\n<td>server.service.labels</td>\n<td>Extra labels for the service resource</td>\n<td>{}</td>\n</tr>\n<tr>\n<td>server.service.loadBalancerSourceRanges</td>\n<td>A list of IP address ranges to allow through the load balancer</td>\n<td>no restriction</td>\n</tr>\n<tr>\n<td>server.platformName</td>\n<td>The name of the configured platform account</td>\n<td>default</td>\n</tr>\n<tr>\n<td>server.configMap</td>\n<td>Custom ConfigMap name for Data Flow server configuration</td>\n<td></td>\n</tr>\n<tr>\n<td>server.trustCerts</td>\n<td>Trust self signed certs</td>\n<td>false</td>\n</tr>\n<tr>\n<td>server.extraEnv</td>\n<td>Extra environment variables to add to the server container</td>\n<td>{}</td>\n</tr>\n<tr>\n<td>server.containerConfiguration.container.registry-configurations.<NAME>.registry-host</td>\n<td>The registry host to use for the profile represented by <NAME></td>\n<td></td>\n</tr>\n<tr>\n<td>server.containerConfiguration.container.registry-configurations.<NAME>.authorization-type</td>\n<td>The registry authorization type to use for the profile represented by <NAME></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"skipper-server-configuration\" style=\"position:relative;\"><a href=\"#skipper-server-configuration\" aria-label=\"skipper server configuration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Skipper Server Configuration</h3>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>skipper.version</td>\n<td>The version/tag of the Skipper server</td>\n<td>2.5.0</td>\n</tr>\n<tr>\n<td>skipper.imagePullPolicy</td>\n<td>The imagePullPolicy of the Skipper server</td>\n<td>IfNotPresent</td>\n</tr>\n<tr>\n<td>skipper.platformName</td>\n<td>The name of the configured platform account</td>\n<td>default</td>\n</tr>\n<tr>\n<td>skipper.service.type</td>\n<td>The service type for the Skipper server</td>\n<td>ClusterIP</td>\n</tr>\n<tr>\n<td>skipper.service.annotations</td>\n<td>Extra annotations for service resources</td>\n<td>{}</td>\n</tr>\n<tr>\n<td>skipper.service.labels</td>\n<td>Extra labels for the service resource</td>\n<td>{}</td>\n</tr>\n<tr>\n<td>skipper.configMap</td>\n<td>Custom ConfigMap name for Skipper server configuration</td>\n<td></td>\n</tr>\n<tr>\n<td>skipper.trustCerts</td>\n<td>Trust self signed certs</td>\n<td>false</td>\n</tr>\n<tr>\n<td>skipper.extraEnv</td>\n<td>Extra environment variables to add to the skipper container</td>\n<td>{}</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"spring-cloud-deployer-for-kubernetes-configuration\" style=\"position:relative;\"><a href=\"#spring-cloud-deployer-for-kubernetes-configuration\" aria-label=\"spring cloud deployer for kubernetes configuration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Spring Cloud Deployer for Kubernetes Configuration</h3>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>deployer.resourceLimits.cpu</td>\n<td>Deployer resource limit for cpu</td>\n<td>500m</td>\n</tr>\n<tr>\n<td>deployer.resourceLimits.memory</td>\n<td>Deployer resource limit for memory</td>\n<td>1024Mi</td>\n</tr>\n<tr>\n<td>deployer.readinessProbe.initialDelaySeconds</td>\n<td>Deployer readiness probe initial delay</td>\n<td>120</td>\n</tr>\n<tr>\n<td>deployer.livenessProbe.initialDelaySeconds</td>\n<td>Deployer liveness probe initial delay</td>\n<td>90</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"rabbitmq-configuration\" style=\"position:relative;\"><a href=\"#rabbitmq-configuration\" aria-label=\"rabbitmq configuration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>RabbitMQ Configuration</h3>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>rabbitmq.enabled</td>\n<td>Enable RabbitMQ as the middleware to use</td>\n<td>true</td>\n</tr>\n<tr>\n<td>rabbitmq.rabbitmq.username</td>\n<td>RabbitMQ user name</td>\n<td>user</td>\n</tr>\n<tr>\n<td>rabbitmq.rabbitmq.password</td>\n<td>RabbitMQ password to encode into the secret</td>\n<td>changeme</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"rabbitmq-ha-configuration\" style=\"position:relative;\"><a href=\"#rabbitmq-ha-configuration\" aria-label=\"rabbitmq ha configuration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>RabbitMQ HA Configuration</h3>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>rabbitmq-ha.enabled</td>\n<td>Enable RabbitMQ HA as the middleware to use</td>\n<td>false</td>\n</tr>\n<tr>\n<td>rabbitmq-ha.rabbitmqUsername</td>\n<td>RabbitMQ user name</td>\n<td>user</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"kafka-configuration\" style=\"position:relative;\"><a href=\"#kafka-configuration\" aria-label=\"kafka configuration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Kafka Configuration</h3>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>kafka.enabled</td>\n<td>Enable RabbitMQ as the middleware to use</td>\n<td>false</td>\n</tr>\n<tr>\n<td>kafka.replicas</td>\n<td>The number of Kafka replicas to use</td>\n<td>1</td>\n</tr>\n<tr>\n<td>kafka.configurationOverrides</td>\n<td>Kafka deployment configuration overrides</td>\n<td>replication.factor=1, metrics.enabled=false</td>\n</tr>\n<tr>\n<td>kafka.zookeeper.replicaCount</td>\n<td>The number of ZooKeeper replicates to use</td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"mysql-configuration\" style=\"position:relative;\"><a href=\"#mysql-configuration\" aria-label=\"mysql configuration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MySQL Configuration</h3>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>mysql.enabled</td>\n<td>Enable deployment of MySQL</td>\n<td>true</td>\n</tr>\n<tr>\n<td>mysql.mysqlDatabase</td>\n<td>MySQL database name</td>\n<td>dataflow</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"external-database-configuration\" style=\"position:relative;\"><a href=\"#external-database-configuration\" aria-label=\"external database configuration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>External Database Configuration</h3>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>database.driver</td>\n<td>Database driver</td>\n<td>nil</td>\n</tr>\n<tr>\n<td>database.scheme</td>\n<td>Database scheme</td>\n<td>nil</td>\n</tr>\n<tr>\n<td>database.host</td>\n<td>Database host</td>\n<td>nil</td>\n</tr>\n<tr>\n<td>database.port</td>\n<td>Database port</td>\n<td>nil</td>\n</tr>\n<tr>\n<td>database.user</td>\n<td>Database user</td>\n<td>scdf</td>\n</tr>\n<tr>\n<td>database.password</td>\n<td>Database password</td>\n<td>nil</td>\n</tr>\n<tr>\n<td>database.dataflow</td>\n<td>Database name for SCDF server</td>\n<td>dataflow</td>\n</tr>\n<tr>\n<td>database.skipper</td>\n<td>Database name for SCDF skipper</td>\n<td>skipper</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"feature-toggles-1\" style=\"position:relative;\"><a href=\"#feature-toggles-1\" aria-label=\"feature toggles 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Feature Toggles</h3>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>features.streaming.enabled</td>\n<td>Enables or disables streams</td>\n<td>true</td>\n</tr>\n<tr>\n<td>features.batch.enabled</td>\n<td>Enables or disables tasks and schedules</td>\n<td>true</td>\n</tr>\n<tr>\n<td>features.monitoring.enabled</td>\n<td>Enables or disables monitoring</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"ingress\" style=\"position:relative;\"><a href=\"#ingress\" aria-label=\"ingress permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Ingress</h3>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ingress.enabled</td>\n<td>Enables or disables ingress support</td>\n<td>true</td>\n</tr>\n<tr>\n<td>ingress.protocol</td>\n<td>Sets the protocol used by ingress server</td>\n<td>https</td>\n</tr>\n<tr>\n<td>ingress.server.host</td>\n<td>Sets the host used for server</td>\n<td>data-flow.local</td>\n</tr>\n<tr>\n<td>ingress.server.host</td>\n<td>Sets the host used for grafana</td>\n<td>grafana.local</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"grafana\" style=\"position:relative;\"><a href=\"#grafana\" aria-label=\"grafana permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Grafana</h3>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>grafana.service.type</td>\n<td>Service type to use</td>\n<td>LoadBalancer</td>\n</tr>\n<tr>\n<td>grafana.admin.existingSecret</td>\n<td>Existing Secret to use for login credentials</td>\n<td>scdf-grafana-secret</td>\n</tr>\n<tr>\n<td>grafana.admin.userKey</td>\n<td>Secret userKey field</td>\n<td>admin-user</td>\n</tr>\n<tr>\n<td>grafana.admin.passwordKey</td>\n<td>Secret passwordKey field</td>\n<td>admin-password</td>\n</tr>\n<tr>\n<td>grafana.admin.defaultUsername</td>\n<td>The default base64 encoded login username used in the secret</td>\n<td>admin</td>\n</tr>\n<tr>\n<td>grafana.admin.defaultPassword</td>\n<td>The default base64 encoded login password used in the secret</td>\n<td>password</td>\n</tr>\n<tr>\n<td>grafana.extraConfigmapMounts</td>\n<td>ConfigMap mount for datasources</td>\n<td>scdf-grafana-ds-cm</td>\n</tr>\n<tr>\n<td>grafana.dashboardProviders</td>\n<td>Dashboard provider for imported dashboards</td>\n<td>default</td>\n</tr>\n<tr>\n<td>grafana.dashboards</td>\n<td>Dashboards to auto import</td>\n<td>SCDF Apps, Streams &#x26; Tasks</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"prometheus\" style=\"position:relative;\"><a href=\"#prometheus\" aria-label=\"prometheus permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Prometheus</h3>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>prometheus.server.global.scrape_interval</td>\n<td>Scrape interval</td>\n<td>10s</td>\n</tr>\n<tr>\n<td>prometheus.server.global.scrape_timeout</td>\n<td>Scrape timeout</td>\n<td>9s</td>\n</tr>\n<tr>\n<td>prometheus.server.global.evaluation_interval</td>\n<td>Evaluation interval</td>\n<td>10s</td>\n</tr>\n<tr>\n<td>prometheus.extraScrapeConfigs</td>\n<td>Additional scrape configs for proxied applications</td>\n<td><code class=\"language-text\">proxied-applications</code> &#x26; <code class=\"language-text\">proxies</code> jobs</td>\n</tr>\n<tr>\n<td>prometheus.podSecurityPolicy</td>\n<td>Enable or disable PodSecurityContext</td>\n<td>true</td>\n</tr>\n<tr>\n<td>prometheus.alertmanager</td>\n<td>Enable or disable alert manager</td>\n<td>false</td>\n</tr>\n<tr>\n<td>prometheus.kubeStateMetrics</td>\n<td>Enable or disable kube state metrics</td>\n<td>false</td>\n</tr>\n<tr>\n<td>prometheus.nodeExporter</td>\n<td>Enable or disable node exporter</td>\n<td>false</td>\n</tr>\n<tr>\n<td>prometheus.pushgateway</td>\n<td>Enable or disable push gateway</td>\n<td>false</td>\n</tr>\n<tr>\n<td>prometheus.proxy.service.type</td>\n<td>Service type to use</td>\n<td>LoadBalancer</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"expected-output\" style=\"position:relative;\"><a href=\"#expected-output\" aria-label=\"expected output permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Expected output</h4>\n<p>After issuing the <code class=\"language-text\">helm install</code> command, you should see output similar to the following:</p>\n<div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">NAME:   my-release\nLAST DEPLOYED: Sat Mar <span class=\"token number\">10</span> <span class=\"token number\">11</span>:33:29 <span class=\"token number\">2018</span>\nNAMESPACE: default\nSTATUS: DEPLOYED\n\nRESOURCES:\n<span class=\"token operator\">==</span><span class=\"token operator\">></span> v1/Secret\nNAME                  TYPE    DATA  AGE\nmy-release-mysql      Opaque  <span class=\"token number\">2</span>     1s\nmy-release-data-flow  Opaque  <span class=\"token number\">2</span>     1s\nmy-release-rabbitmq   Opaque  <span class=\"token number\">2</span>     1s\n\n<span class=\"token operator\">==</span><span class=\"token operator\">></span> v1/ConfigMap\nNAME                          DATA  AGE\nmy-release-data-flow-server   <span class=\"token number\">1</span>     1s\nmy-release-data-flow-skipper  <span class=\"token number\">1</span>     1s\n\n<span class=\"token operator\">==</span><span class=\"token operator\">></span> v1/PersistentVolumeClaim\nNAME                 STATUS   VOLUME                                    CAPACITY  ACCESSMODES  STORAGECLASS  AGE\nmy-release-rabbitmq  Bound    pvc-e9ed7f55-2499-11e8-886f-08002799df04  8Gi       RWO          standard      1s\nmy-release-mysql     Pending  standard                                  1s\n\n<span class=\"token operator\">==</span><span class=\"token operator\">></span> v1/ServiceAccount\nNAME                  SECRETS  AGE\nmy-release-data-flow  <span class=\"token number\">1</span>        1s\n\n<span class=\"token operator\">==</span><span class=\"token operator\">></span> v1/Service\nNAME                          CLUSTER-IP      EXTERNAL-IP  PORT<span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">)</span>                                AGE\nmy-release-mysql              <span class=\"token number\">10.110</span>.98.253   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>       <span class=\"token number\">3306</span>/TCP                               1s\nmy-release-data-flow-server   <span class=\"token number\">10.105</span>.216.155  <span class=\"token operator\">&lt;</span>pending<span class=\"token operator\">></span>    <span class=\"token number\">80</span>:32626/TCP                           1s\nmy-release-rabbitmq           <span class=\"token number\">10.106</span>.76.215   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>       <span class=\"token number\">4369</span>/TCP,5672/TCP,25672/TCP,15672/TCP  1s\nmy-release-data-flow-skipper  <span class=\"token number\">10.100</span>.28.64    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>       <span class=\"token number\">80</span>/TCP                                 1s\n\n<span class=\"token operator\">==</span><span class=\"token operator\">></span> v1beta1/Deployment\nNAME                          DESIRED  CURRENT  UP-TO-DATE  AVAILABLE  AGE\nmy-release-mysql              <span class=\"token number\">1</span>        <span class=\"token number\">1</span>        <span class=\"token number\">1</span>           <span class=\"token number\">0</span>          1s\nmy-release-rabbitmq           <span class=\"token number\">1</span>        <span class=\"token number\">1</span>        <span class=\"token number\">1</span>           <span class=\"token number\">0</span>          1s\nmy-release-data-flow-skipper  <span class=\"token number\">1</span>        <span class=\"token number\">1</span>        <span class=\"token number\">1</span>           <span class=\"token number\">0</span>          1s\nmy-release-data-flow-server   <span class=\"token number\">1</span>        <span class=\"token number\">1</span>        <span class=\"token number\">1</span>           <span class=\"token number\">0</span>          1s</code></pre></div>\n      </div>\n<div class=\"admonition note\"><p>Get the Spring Cloud Data Flow's application URL by running these commands:</p><div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">SERVICE_IP</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span>kubectl get svc --namespace default my-release-data-flow-server -o <span class=\"token assign-left variable\">jsonpath</span><span class=\"token operator\">=</span><span class=\"token string\">'{.status.loadBalancer.ingress[0].ip}'</span><span class=\"token variable\">)</span></span>\n<span class=\"token builtin class-name\">echo</span> http://<span class=\"token variable\">$SERVICE_IP</span>:80</code></pre></div>\n      </div><p>It may take a few minutes for the LoadBalancer IP to be available.\nYou can watch the status of the server by running <code class=\"language-text\">kubectl get svc -w my-release-data-flow-server</code></p></div>\n<div class=\"admonition note\"><p>If your using Minikube, you can use the following command to get the URL for the server:</p><div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">minikube <span class=\"token function\">service</span> --url my-release-data-flow-server</code></pre></div>\n      </div></div>\n<p>You have just created a new release in the default namespace of your Kubernetes cluster.\nIt takes a couple of minutes for the application and its required services to start.\nYou can check on the status by issuing a <code class=\"language-text\">kubectl get pod -w</code> command.\nYou need to wait for the <code class=\"language-text\">READY</code> column to show <code class=\"language-text\">1/1</code> for all pods.</p>\n<p>When all pods are ready, you can access the Spring Cloud Data Flow dashboard by accessing <code class=\"language-text\">http://&lt;SERVICE_ADDRESS>/dashboard</code> where <code class=\"language-text\">&lt;SERVICE_ADDRESS></code> is the address returned by either the <code class=\"language-text\">kubectl</code> or <code class=\"language-text\">minikube</code> commands above.</p>\n<p>To see what <code class=\"language-text\">Helm</code> releases of Spring Cloud Data Flow you have running, you can use the <code class=\"language-text\">helm list</code> command.\nWhen it is time to delete the previously installed SCDF release, run <code class=\"language-text\">helm delete my-release</code>.\nThis command removes any resources created for the release but keeps release information so that you can rollback any changes by using a <code class=\"language-text\">helm rollback my-release 1</code> command.\nTo completely delete the release and purge any release metadata, you can use <code class=\"language-text\">helm delete my-release --purge</code>.</p>\n<div class=\"admonition tip\"><p><strong>Secret management</strong></p><p>There is an <a href=\"https://github.com/kubernetes/charts/issues/980\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">issue</a>\nwith generated secrets that are used for the required services getting\nrotated on chart upgrades. To avoid this issue, set the password for\nthese services when installing the chart. You can use the following\ncommand to do so:</p></div>\n<div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">helm <span class=\"token function\">install</span> --name my-release <span class=\"token punctuation\">\\</span>\n    --set rabbitmq.rabbitmqPassword<span class=\"token operator\">=</span>rabbitpwd <span class=\"token punctuation\">\\</span>\n    --set mysql.mysqlRootPassword<span class=\"token operator\">=</span>mysqlpwd incubator/spring-cloud-data-flow</code></pre></div>\n      </div>\n<h4 id=\"version-compatibility\" style=\"position:relative;\"><a href=\"#version-compatibility\" aria-label=\"version compatibility permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Version Compatibility</h4>\n<p>The following listing shows Spring Cloud Data Flow’s version compatibility with the respective Helm Chart releases:</p>\n<table>\n<thead>\n<tr>\n<th>SCDF Version</th>\n<th align=\"center\">Chart Version</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>SCDF-K8S-Server 1.7.x</td>\n<td align=\"center\">1.0.x</td>\n</tr>\n<tr>\n<td>SCDF-K8S-Server 2.0.x</td>\n<td align=\"center\">2.2.x</td>\n</tr>\n<tr>\n<td>SCDF-K8S-Server 2.1.x</td>\n<td align=\"center\">2.3.x</td>\n</tr>\n<tr>\n<td>SCDF-K8S-Server 2.2.x</td>\n<td align=\"center\">2.4.x</td>\n</tr>\n<tr>\n<td>SCDF-K8S-Server 2.3.x</td>\n<td align=\"center\">2.5.x</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"register-prebuilt-applications\" style=\"position:relative;\"><a href=\"#register-prebuilt-applications\" aria-label=\"register prebuilt applications permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Register prebuilt applications</h2>\n<p>All the prebuilt streaming applications:</p>\n<ul>\n<li>Are available as Apache Maven artifacts or Docker images.</li>\n<li>Use RabbitMQ or Apache Kafka.</li>\n<li>Support monitoring via Prometheus and InfluxDB.</li>\n<li>Contain metadata for application properties used in the UI and code completion in the shell.</li>\n</ul>\n<p>Applications can be registered individually using the <code class=\"language-text\">app register</code> functionality or as a group using the <code class=\"language-text\">app import</code> functionality.\nThere are also <code class=\"language-text\">dataflow.spring.io</code> links that represent the group of prebuilt applications for a specific release which is useful for getting started.</p>\n<p>You can register applications using the UI or the shell.\nEven though we are only using two prebuilt applications, we will register the full set of prebuilt applications.</p>\n<p>The easiest way to install Data Flow on Kubernetes is using the Helm chart that uses RabbitMQ as the default messaging middleware.\nThe command to import the Kafka version of the applications is</p>\n<div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">dataflow:<span class=\"token operator\">></span>app <span class=\"token function\">import</span> --uri https://dataflow.spring.io/kafka-docker-latest</code></pre></div>\n      </div>\n<p>Change <code class=\"language-text\">kafka</code> to <code class=\"language-text\">rabbitmq</code> in the above URL if you set <code class=\"language-text\">kafka.enabled=true</code> in the helm chart or followed the manual <code class=\"language-text\">kubectl</code> based installation instructions for installing Data Flow on Kubernetes and chose to use Kafka as the messaging middleware.</p>\n<div class=\"admonition tip\"><p>Only applications registered with a <code class=\"language-text\">--uri</code> property\npointing to a Docker resource are supported by the Data Flow Server\nfor Kubernetes. However, we do support Maven resources for the\n<code class=\"language-text\">--metadata-uri</code> property, which is used to list the properties\nsupported by each application. For example, the following application\nregistration is valid:</p><div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">app register --type <span class=\"token builtin class-name\">source</span> --name <span class=\"token function\">time</span> --uri docker://springcloudstream/time-source-rabbit:<span class=\"token punctuation\">{</span>docker-time-source-rabbit-version<span class=\"token punctuation\">}</span> --metadata-uri maven://org.springframework.cloud.stream.app:time-source-rabbit:jar:metadata:<span class=\"token punctuation\">{</span>docker-time-source-rabbit-version<span class=\"token punctuation\">}</span></code></pre></div>\n      </div><p>Any application registered with a Maven, HTTP, or File resource or the executable jar (by using a <code class=\"language-text\">--uri</code> property prefixed with\n<code class=\"language-text\">maven://</code>, <code class=\"language-text\">http://</code> or <code class=\"language-text\">file://</code>) is <strong><em>not supported</em></strong>.</p></div>\n<h2 id=\"application-and-server-properties\" style=\"position:relative;\"><a href=\"#application-and-server-properties\" aria-label=\"application and server properties permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Application and Server Properties</h2>\n<p>This section covers how you can customize the deployment of your\napplications. You can use a number of properties to influence settings\nfor the applications that are deployed. Properties can be applied on a\nper-application basis or in the appropriate server configuration for all\ndeployed applications.</p>\n<div class=\"admonition tip\"><p>Properties set on a per-application basis always take precedence over\nproperties set as the server configuration. This arrangement lets you\noverride global server level properties on a per-application basis.</p></div>\n<p>Properties to be applied for all deployed Tasks are defined in the\n<code class=\"language-text\">src/kubernetes/server/server-config.yaml</code> file and for Streams\nin <code class=\"language-text\">src/kubernetes/skipper/skipper-config-(binder).yaml</code>. Replace\n<code class=\"language-text\">(binder)</code> with the messaging middleware you are using — for example,\n<code class=\"language-text\">rabbit</code> or <code class=\"language-text\">kafka</code>.</p>\n<h3 id=\"memory-and-cpu-settings\" style=\"position:relative;\"><a href=\"#memory-and-cpu-settings\" aria-label=\"memory and cpu settings permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Memory and CPU Settings</h3>\n<p>Applications are deployed with default memory and CPU settings. If\nneeded, these values can be adjusted. The following example shows how to\nset <code class=\"language-text\">Limits</code> to <code class=\"language-text\">1000m</code> for <code class=\"language-text\">CPU</code> and <code class=\"language-text\">1024Mi</code> for memory and <code class=\"language-text\">Requests</code>\nto <code class=\"language-text\">800m</code> for CPU and <code class=\"language-text\">640Mi</code> for memory:</p>\n<div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"properties\"><pre class=\"language-properties\"><code class=\"language-properties\"><span class=\"token attr-name\">deployer.&lt;app>.kubernetes.limits.cpu</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">1000m</span>\n<span class=\"token attr-name\">deployer.&lt;app>.kubernetes.limits.memory</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">1024Mi</span>\n<span class=\"token attr-name\">deployer.&lt;app>.kubernetes.requests.cpu</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">800m</span>\n<span class=\"token attr-name\">deployer.&lt;app>.kubernetes.requests.memory</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">640Mi</span></code></pre></div>\n      </div>\n<p>Those values results in the following container settings being used:</p>\n<div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"properties\"><pre class=\"language-properties\"><code class=\"language-properties\"><span class=\"token attr-name\">Limits</span><span class=\"token punctuation\">:</span>\n<span class=\"token attr-name\">cpu</span><span class=\"token punctuation\">:</span> <span class=\"token attr-value\">1</span>\n<span class=\"token attr-name\">memory</span><span class=\"token punctuation\">:</span> <span class=\"token attr-value\">1Gi</span>\n<span class=\"token attr-name\">Requests</span><span class=\"token punctuation\">:</span>\n<span class=\"token attr-name\">cpu</span><span class=\"token punctuation\">:</span> <span class=\"token attr-value\">800m</span>\n<span class=\"token attr-name\">memory</span><span class=\"token punctuation\">:</span> <span class=\"token attr-value\">640Mi</span></code></pre></div>\n      </div>\n<p>You can also control the default values to which to set the <code class=\"language-text\">cpu</code> and\n<code class=\"language-text\">memory</code> globally.</p>\n<p>The following example shows how to set the CPU and memory for streams and tasks:</p>\n<div class=\"tabs\"><div class=\"tabs-headers\"><a onClick=\"changeTab(event, 0);return false;\" class=\"tab-item active\">Streams</a><a onClick=\"changeTab(event, 1);return false;\" class=\"tab-item \">Tasks</a></div><div class=\"tabs-items\"><div class=\"tab-item active\"><div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">data</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">application.yaml</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token punctuation\">-</span>\n    <span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">cloud</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">skipper</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">server</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">platform</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">kubernetes</span><span class=\"token punctuation\">:</span>\n                <span class=\"token key atrule\">accounts</span><span class=\"token punctuation\">:</span>\n                  <span class=\"token key atrule\">default</span><span class=\"token punctuation\">:</span>\n                    <span class=\"token key atrule\">limits</span><span class=\"token punctuation\">:</span>\n                      <span class=\"token key atrule\">memory</span><span class=\"token punctuation\">:</span> 640mi\n                      <span class=\"token key atrule\">cpu</span><span class=\"token punctuation\">:</span> 500m</code></pre></div>\n      </div></div><div class=\"tab-item \"><div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">data</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">application.yaml</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token punctuation\">-</span>\n    <span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">cloud</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">dataflow</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">task</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">platform</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">kubernetes</span><span class=\"token punctuation\">:</span>\n                <span class=\"token key atrule\">accounts</span><span class=\"token punctuation\">:</span>\n                  <span class=\"token key atrule\">default</span><span class=\"token punctuation\">:</span>\n                    <span class=\"token key atrule\">limits</span><span class=\"token punctuation\">:</span>\n                      <span class=\"token key atrule\">memory</span><span class=\"token punctuation\">:</span> 640mi\n                      <span class=\"token key atrule\">cpu</span><span class=\"token punctuation\">:</span> 500m</code></pre></div>\n      </div></div></div></div>\n<p>The settings we have used so far only affect the settings for the\ncontainer. They do not affect the memory setting for the JVM process in\nthe container. If you would like to set JVM memory settings, you can\nprovide an environment variable to do so. See the next section for\ndetails.</p>\n<h3 id=\"environment-variables\" style=\"position:relative;\"><a href=\"#environment-variables\" aria-label=\"environment variables permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Environment Variables</h3>\n<p>To influence the environment settings for a given application, you can\nuse the <code class=\"language-text\">spring.cloud.deployer.kubernetes.environmentVariables</code> deployer\nproperty. For example, a common requirement in production settings is to\ninfluence the JVM memory arguments. You can do so by using the\n<code class=\"language-text\">JAVA_TOOL_OPTIONS</code> environment variable, as the following example\nshows:</p>\n<div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"properties\"><pre class=\"language-properties\"><code class=\"language-properties\"><span class=\"token attr-name\">deployer.&lt;app>.kubernetes.environmentVariables</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">JAVA_TOOL_OPTIONS=-Xmx1024m</span></code></pre></div>\n      </div>\n<div class=\"admonition tip\"><p>The <code class=\"language-text\">environmentVariables</code> property accepts a comma-delimited string.\nIf an environment variable contains a value which is also a\ncomma-delimited string, it must be enclosed in single quotation marks — for example,</p><div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"properties\"><pre class=\"language-properties\"><code class=\"language-properties\"><span class=\"token attr-name\">spring.cloud.deployer.kubernetes.environmentVariables</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">spring.cloud.stream.kafka.binder.brokers='somehost:9092, anotherhost:9093'</span></code></pre></div>\n      </div></div>\n<p>This overrides the JVM memory setting for the desired <code class=\"language-text\">&lt;app></code> (replace\n<code class=\"language-text\">&lt;app></code> with the name of your application).</p>\n<h3 id=\"liveness-and-readiness-probes\" style=\"position:relative;\"><a href=\"#liveness-and-readiness-probes\" aria-label=\"liveness and readiness probes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Liveness and Readiness Probes</h3>\n<p>The <code class=\"language-text\">liveness</code> and <code class=\"language-text\">readiness</code> probes use paths called <code class=\"language-text\">/health</code> and\n<code class=\"language-text\">/info</code>, respectively. They use a <code class=\"language-text\">delay</code> of <code class=\"language-text\">10</code> for both and a\n<code class=\"language-text\">period</code> of <code class=\"language-text\">60</code> and <code class=\"language-text\">10</code> respectively. You can change these defaults\nwhen you deploy the stream by using deployer properties. Liveness and\nreadiness probes are only applied to streams.</p>\n<p>The following example changes the <code class=\"language-text\">liveness</code> probe (replace <code class=\"language-text\">&lt;app></code> with\nthe name of your application) by setting deployer properties:</p>\n<div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"properties\"><pre class=\"language-properties\"><code class=\"language-properties\"><span class=\"token attr-name\">deployer.&lt;app>.kubernetes.livenessProbePath</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">/health</span>\n<span class=\"token attr-name\">deployer.&lt;app>.kubernetes.livenessProbeDelay</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">120</span>\n<span class=\"token attr-name\">deployer.&lt;app>.kubernetes.livenessProbePeriod</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">20</span></code></pre></div>\n      </div>\n<p>You can declare the same as part of the server global configuration for\nstreams, as the following example shows:</p>\n<div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">data</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">application.yaml</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token punctuation\">-</span>\n    <span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">cloud</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">skipper</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">server</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">platform</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">kubernetes</span><span class=\"token punctuation\">:</span>\n                <span class=\"token key atrule\">accounts</span><span class=\"token punctuation\">:</span>\n                  <span class=\"token key atrule\">default</span><span class=\"token punctuation\">:</span>\n                    <span class=\"token key atrule\">livenessProbePath</span><span class=\"token punctuation\">:</span> /health\n                    <span class=\"token key atrule\">livenessProbeDelay</span><span class=\"token punctuation\">:</span> <span class=\"token number\">120</span>\n                    <span class=\"token key atrule\">livenessProbePeriod</span><span class=\"token punctuation\">:</span> <span class=\"token number\">20</span></code></pre></div>\n      </div>\n<p>Similarly, you can swap <code class=\"language-text\">liveness</code> for <code class=\"language-text\">readiness</code> to override the\ndefault <code class=\"language-text\">readiness</code> settings.</p>\n<p>By default, port 8080 is used as the probe port. You can change the\ndefaults for both <code class=\"language-text\">liveness</code> and <code class=\"language-text\">readiness</code> probe ports by using\ndeployer properties, as the following example shows:</p>\n<div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"properties\"><pre class=\"language-properties\"><code class=\"language-properties\"><span class=\"token attr-name\">deployer.&lt;app>.kubernetes.readinessProbePort</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">7000</span>\n<span class=\"token attr-name\">deployer.&lt;app>.kubernetes.livenessProbePort</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">7000</span></code></pre></div>\n      </div>\n<p>You can declare the same as part of the global configuration for\nstreams, as the following example shows:</p>\n<div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">data</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">application.yaml</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token punctuation\">-</span>\n    <span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">cloud</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">skipper</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">server</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">platform</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">kubernetes</span><span class=\"token punctuation\">:</span>\n                <span class=\"token key atrule\">accounts</span><span class=\"token punctuation\">:</span>\n                  <span class=\"token key atrule\">default</span><span class=\"token punctuation\">:</span>\n                    <span class=\"token key atrule\">readinessProbePort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">7000</span>\n                    <span class=\"token key atrule\">livenessProbePort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">7000</span></code></pre></div>\n      </div>\n<div class=\"admonition tip\"><p>By default, the <code class=\"language-text\">liveness</code> and <code class=\"language-text\">readiness</code> probe paths use Spring Boot\n2.x+ actuator endpoints. To use Spring Boot 1.x actuator endpoint\npaths, you must adjust the <code class=\"language-text\">liveness</code> and <code class=\"language-text\">readiness</code> values, as the\nfollowing example shows (replace <code class=\"language-text\">&lt;app></code> with the name of your\napplication):</p></div>\n<div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"properties\"><pre class=\"language-properties\"><code class=\"language-properties\"><span class=\"token attr-name\">deployer.&lt;app>.kubernetes.livenessProbePath</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">/health</span>\n<span class=\"token attr-name\">deployer.&lt;app>.kubernetes.readinessProbePath</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">/info</span></code></pre></div>\n      </div>\n<p>To automatically set both <code class=\"language-text\">liveness</code> and <code class=\"language-text\">readiness</code> endpoints on a\nper-application basis to the default Spring Boot 1.x paths, you can set\nthe following property:</p>\n<div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"properties\"><pre class=\"language-properties\"><code class=\"language-properties\"><span class=\"token attr-name\">deployer.&lt;app>.kubernetes.bootMajorVersion</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">1</span></code></pre></div>\n      </div>\n<p>You can access secured probe endpoints by using credentials stored in a\n<a href=\"https://kubernetes.io/docs/concepts/configuration/secret/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Kubernetes\nsecret</a>. You\ncan use an existing secret, provided the credentials are contained under\nthe <code class=\"language-text\">credentials</code> key name of the secret’s <code class=\"language-text\">data</code> block. You can\nconfigure probe authentication on a per-application basis. When enabled,\nit is applied to both the <code class=\"language-text\">liveness</code> and <code class=\"language-text\">readiness</code> probe endpoints by\nusing the same credentials and authentication type. Currently, only\n<code class=\"language-text\">Basic</code> authentication is supported.</p>\n<p>To create a new secret:</p>\n<ol>\n<li>\n<p>Generate the base64 string with the credentials used to access the\nsecured probe endpoints.</p>\n<p>Basic authentication encodes a username and password as a base64\nstring in the format of <code class=\"language-text\">username:password</code>.</p>\n<p>The following example (which includes output and in which you should\nreplace <code class=\"language-text\">user</code> and <code class=\"language-text\">pass</code> with your values) shows how to generate a\nbase64 string:</p>\n<div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> -n <span class=\"token string\">\"user:pass\"</span> <span class=\"token operator\">|</span> base64\ndXNlcjpwYXNz</code></pre></div>\n      </div>\n</li>\n<li>\n<p>With the encoded credentials, create a file (for example,\n<code class=\"language-text\">myprobesecret.yml</code>) with the following contents:</p>\n<div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">apiVersion: v1\nkind: Secret\nmetadata:\nname:\nmyprobesecret type:\nOpaque data:\ncredentials: GENERATED_BASE64_STRING</code></pre></div>\n      </div>\n</li>\n<li>Replace <code class=\"language-text\">GENERATED_BASE64_STRING</code> with the base64-encoded value\ngenerated earlier.</li>\n<li>\n<p>Create the secret by using <code class=\"language-text\">kubectl</code>, as the following example\nshows:</p>\n<div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl create -f ./myprobesecret.yml\nsecret <span class=\"token string\">\"myprobesecret\"</span> created</code></pre></div>\n      </div>\n</li>\n<li>\n<p>Set the following deployer properties to use authentication when\naccessing probe endpoints, as the following example shows:</p>\n<div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"properties\"><pre class=\"language-properties\"><code class=\"language-properties\"><span class=\"token attr-name\">deployer.&lt;app>.kubernetes.probeCredentialsSecret</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">myprobesecret</span></code></pre></div>\n      </div>\n<p>Replace <code class=\"language-text\">&lt;app></code> with the name of the application to which to\napply authentication.</p>\n</li>\n</ol>\n<h3 id=\"using-spring_application_json\" style=\"position:relative;\"><a href=\"#using-spring_application_json\" aria-label=\"using spring_application_json permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Using <code class=\"language-text\">SPRING_APPLICATION_JSON</code></h3>\n<p>You can use a <code class=\"language-text\">SPRING_APPLICATION_JSON</code> environment variable to set Data\nFlow server properties (including the configuration of maven repository\nsettings) that are common across all of the Data Flow server\nimplementations. These settings go at the server level in the container\n<code class=\"language-text\">env</code> section of a deployment YAML. The following example shows how to\ndo so:</p>\n<div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> SPRING_APPLICATION_JSON\n    <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token punctuation\">-</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token key atrule\">\"maven\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token key atrule\">\"local-repository\"</span><span class=\"token punctuation\">:</span> <span class=\"token null important\">null</span><span class=\"token punctuation\">,</span>\n        <span class=\"token key atrule\">\"remote-repositories\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token key atrule\">\"repo1\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token key atrule\">\"url\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"https://repo.spring.io/libs-snapshot\"</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>\n      </div>\n<h3 id=\"private-docker-registry\" style=\"position:relative;\"><a href=\"#private-docker-registry\" aria-label=\"private docker registry permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Private Docker Registry</h3>\n<p>You can pull Docker images from a private registry on a per-application\nbasis. First, you must create a secret in the cluster. Follow the <a href=\"https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Pull\nan Image from a Private\nRegistry</a>\nguide to create the secret.</p>\n<p>Once you have created the secret, you can use the <code class=\"language-text\">imagePullSecret</code>\nproperty to set the secret to use, as the following example shows:</p>\n<div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"properties\"><pre class=\"language-properties\"><code class=\"language-properties\"><span class=\"token attr-name\">deployer.&lt;app>.kubernetes.imagePullSecret</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">mysecret</span></code></pre></div>\n      </div>\n<p>Replace <code class=\"language-text\">&lt;app></code> with the name of your application and <code class=\"language-text\">mysecret</code> with\nthe name of the secret you created earlier.</p>\n<p>You can also configure the image pull secret at the global server level.</p>\n<p>The following example shows how to do so for streams and tasks:</p>\n<div class=\"tabs\"><div class=\"tabs-headers\"><a onClick=\"changeTab(event, 0);return false;\" class=\"tab-item active\">Streams (Skipper configuration)</a><a onClick=\"changeTab(event, 1);return false;\" class=\"tab-item \">Tasks (DataFlow configuration)</a></div><div class=\"tabs-items\"><div class=\"tab-item active\"><div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">data</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">application.yaml</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token punctuation\">-</span>\n    <span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">cloud</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">skipper</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">server</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">platform</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">kubernetes</span><span class=\"token punctuation\">:</span>\n                <span class=\"token key atrule\">accounts</span><span class=\"token punctuation\">:</span>\n                  <span class=\"token key atrule\">default</span><span class=\"token punctuation\">:</span>\n                    <span class=\"token key atrule\">imagePullSecret</span><span class=\"token punctuation\">:</span> mysecret</code></pre></div>\n      </div></div><div class=\"tab-item \"><div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">data</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">application.yaml</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token punctuation\">-</span>\n    <span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">cloud</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">dataflow</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">task</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">platform</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">kubernetes</span><span class=\"token punctuation\">:</span>\n                <span class=\"token key atrule\">accounts</span><span class=\"token punctuation\">:</span>\n                  <span class=\"token key atrule\">default</span><span class=\"token punctuation\">:</span>\n                    <span class=\"token key atrule\">imagePullSecret</span><span class=\"token punctuation\">:</span> mysecret</code></pre></div>\n      </div></div></div></div>\n<p>Replace <code class=\"language-text\">mysecret</code> with the name of the secret you created earlier.</p>\n<h4 id=\"volume-mounted-secretes\" style=\"position:relative;\"><a href=\"#volume-mounted-secretes\" aria-label=\"volume mounted secretes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Volume Mounted Secretes</h4>\n<p>Data Flow uses the <a href=\"/docs/2.6.x/feature-guides/general/application-metadata/\">application metadata</a> stored in a container image label.\nTo access the metadata labels in a private registry, you have to extend the Data Flow deployment configuration and mount the registry secrets as a <a href=\"https://cloud.spring.io/spring-cloud-static/spring-cloud-kubernetes/2.0.0.M1/reference/html/#secrets-propertysource\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Secrets PropertySource</a>:</p>\n<div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\">    <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> scdf<span class=\"token punctuation\">-</span>server\n        <span class=\"token punctuation\">...</span>\n        <span class=\"token key atrule\">volumeMounts</span><span class=\"token punctuation\">:</span>\n          <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> mysecret\n            <span class=\"token key atrule\">mountPath</span><span class=\"token punctuation\">:</span> /etc/secrets/mysecret\n            <span class=\"token key atrule\">readOnly</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n        <span class=\"token punctuation\">...</span>\n      <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> mysecret\n          <span class=\"token key atrule\">secret</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">secretName</span><span class=\"token punctuation\">:</span> mysecret</code></pre></div>\n      </div>\n<h3 id=\"annotations\" style=\"position:relative;\"><a href=\"#annotations\" aria-label=\"annotations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Annotations</h3>\n<p>You can add annotations to Kubernetes objects on a per-application\nbasis. The supported object types are pod <code class=\"language-text\">Deployment</code>, <code class=\"language-text\">Service</code>, and\n<code class=\"language-text\">Job</code>. Annotations are defined in a <code class=\"language-text\">key:value</code> format, allowing for\nmultiple annotations separated by a comma. For more information and use\ncases on annotations, see\n<a href=\"https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Annotations</a>.</p>\n<p>The following example shows how you can configure applications to use\nannotations:</p>\n<div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"properties\"><pre class=\"language-properties\"><code class=\"language-properties\"><span class=\"token attr-name\">deployer.&lt;app>.kubernetes.podAnnotations</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">annotationName:annotationValue</span>\n<span class=\"token attr-name\">deployer.&lt;app>.kubernetes.serviceAnnotations</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">annotationName:annotationValue,annotationName2:annotationValue2</span>\n<span class=\"token attr-name\">deployer.&lt;app>.kubernetes.jobAnnotations</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">annotationName:annotationValue</span></code></pre></div>\n      </div>\n<p>Replace <code class=\"language-text\">&lt;app></code> with the name of your application and the value of your\nannotations.</p>\n<h3 id=\"entry-point-style\" style=\"position:relative;\"><a href=\"#entry-point-style\" aria-label=\"entry point style permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Entry Point Style</h3>\n<p>An entry point style affects how application properties are passed to\nthe container to be deployed. Currently, three styles are supported:</p>\n<ul>\n<li><code class=\"language-text\">exec</code> (default): Passes all application properties and command line\narguments in the deployment request as container arguments.\nApplication properties are transformed into the format of\n<code class=\"language-text\">--key=value</code>.</li>\n<li><code class=\"language-text\">shell</code>: Passes all application properties and command line arguments\nas environment variables. Each of the application and command line\nargument properties is transformed into an uppercase string and <code class=\"language-text\">.</code>\ncharacters are replaced with <code class=\"language-text\">_</code>.</li>\n<li><code class=\"language-text\">boot</code>: Creates an environment variable called\n<code class=\"language-text\">SPRING_APPLICATION_JSON</code> that contains a JSON representation of all\napplication properties. Command line arguments from the deployment\nrequest are set as container args.</li>\n</ul>\n<div class=\"admonition tip\"><p>In all cases, environment variables defined at the server-level\nconfiguration and on a per-application basis are set onto the\ncontainer as is.</p></div>\n<p>You can configure applications as follows:</p>\n<div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"properties\"><pre class=\"language-properties\"><code class=\"language-properties\"><span class=\"token attr-name\">deployer.&lt;app>.kubernetes.entryPointStyle</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">&lt;Entry Point Style></span></code></pre></div>\n      </div>\n<p>Replace <code class=\"language-text\">&lt;app></code> with the name of your application and\n<code class=\"language-text\">&lt;Entry Point Style></code> with your desired entry point style.</p>\n<p>You can also configure the entry point style at the global server level.</p>\n<p>The following example shows how to do so for streams:</p>\n<div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">data</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">application.yaml</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token punctuation\">-</span>\n    <span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">cloud</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">skipper</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">server</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">platform</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">kubernetes</span><span class=\"token punctuation\">:</span>\n                <span class=\"token key atrule\">accounts</span><span class=\"token punctuation\">:</span>\n                  <span class=\"token key atrule\">default</span><span class=\"token punctuation\">:</span>\n                    <span class=\"token key atrule\">entryPointStyle</span><span class=\"token punctuation\">:</span> entryPointStyle</code></pre></div>\n      </div>\n<p>The following example shows how to do so for tasks:</p>\n<div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">data</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">application.yaml</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token punctuation\">-</span>\n    <span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">cloud</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">dataflow</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">task</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">platform</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">kubernetes</span><span class=\"token punctuation\">:</span>\n                <span class=\"token key atrule\">accounts</span><span class=\"token punctuation\">:</span>\n                  <span class=\"token key atrule\">default</span><span class=\"token punctuation\">:</span>\n                    <span class=\"token key atrule\">entryPointStyle</span><span class=\"token punctuation\">:</span> entryPointStyle</code></pre></div>\n      </div>\n<p>Replace <code class=\"language-text\">entryPointStye</code> with the desired entry point style.</p>\n<p>You should choose an Entry Point Style of either <code class=\"language-text\">exec</code> or <code class=\"language-text\">shell</code>, to\ncorrespond to how the <code class=\"language-text\">ENTRYPOINT</code> syntax is defined in the container’s\n<code class=\"language-text\">Dockerfile</code>. For more information and uses cases on <code class=\"language-text\">exec</code> versus\n<code class=\"language-text\">shell</code>, see the\n<a href=\"https://docs.docker.com/engine/reference/builder/#entrypoint\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ENTRYPOINT</a>\nsection of the Docker documentation.</p>\n<p>Using the <code class=\"language-text\">boot</code> entry point style corresponds to using the <code class=\"language-text\">exec</code> style\n<code class=\"language-text\">ENTRYPOINT</code>. Command line arguments from the deployment request are\npassed to the container, with the addition of application properties\nbeing mapped into the <code class=\"language-text\">SPRING_APPLICATION_JSON</code> environment variable\nrather than command line arguments.</p>\n<div class=\"admonition tip\"><p>When you use the <code class=\"language-text\">boot</code> Entry Point Style, the <code class=\"language-text\">deployer.&lt;app>.kubernetes.environmentVariables</code> property must not\ncontain <code class=\"language-text\">SPRING_APPLICATION_JSON</code>.</p></div>\n<h3 id=\"deployment-service-account\" style=\"position:relative;\"><a href=\"#deployment-service-account\" aria-label=\"deployment service account permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deployment Service Account</h3>\n<p>You can configure a custom service account for application deployments\nthrough properties. You can use an existing service account or create a\nnew one. One way to create a service account is by using <code class=\"language-text\">kubectl</code>, as\nthe following example shows:</p>\n<div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl create serviceaccount myserviceaccountname\nserviceaccount <span class=\"token string\">\"myserviceaccountname\"</span> created</code></pre></div>\n      </div>\n<p>Then you can configure individual applications as follows:</p>\n<div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"properties\"><pre class=\"language-properties\"><code class=\"language-properties\"><span class=\"token attr-name\">deployer.&lt;app>.kubernetes.deploymentServiceAccountName</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">myserviceaccountname</span></code></pre></div>\n      </div>\n<p>Replace <code class=\"language-text\">&lt;app></code> with the name of your application and\n<code class=\"language-text\">myserviceaccountname</code> with your service account name.</p>\n<p>You can also configure the service account name at the global server\nlevel.</p>\n<p>The following example shows how to do so for streams:</p>\n<div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">data</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">application.yaml</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token punctuation\">-</span>\n    <span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">cloud</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">skipper</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">server</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">platform</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">kubernetes</span><span class=\"token punctuation\">:</span>\n                <span class=\"token key atrule\">accounts</span><span class=\"token punctuation\">:</span>\n                  <span class=\"token key atrule\">default</span><span class=\"token punctuation\">:</span>\n                    <span class=\"token key atrule\">deploymentServiceAccountName</span><span class=\"token punctuation\">:</span> myserviceaccountname</code></pre></div>\n      </div>\n<p>The following example shows how to do so for tasks:</p>\n<div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">data</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">application.yaml</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token punctuation\">-</span>\n    <span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">cloud</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">dataflow</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">task</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">platform</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">kubernetes</span><span class=\"token punctuation\">:</span>\n                <span class=\"token key atrule\">accounts</span><span class=\"token punctuation\">:</span>\n                  <span class=\"token key atrule\">default</span><span class=\"token punctuation\">:</span>\n                    <span class=\"token key atrule\">deploymentServiceAccountName</span><span class=\"token punctuation\">:</span> myserviceaccountname</code></pre></div>\n      </div>\n<p>Replace <code class=\"language-text\">myserviceaccountname</code> with the service account name to be\napplied to all deployments.</p>\n<h3 id=\"image-pull-policy\" style=\"position:relative;\"><a href=\"#image-pull-policy\" aria-label=\"image pull policy permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Image Pull Policy</h3>\n<p>An image pull policy defines when a Docker image should be pulled to the\nlocal registry. Currently, three policies are supported:</p>\n<ul>\n<li><code class=\"language-text\">IfNotPresent</code> (default): Do not pull an image if it already exists.</li>\n<li><code class=\"language-text\">Always</code>: Always pull the image regardless of whether it\nalready exists.</li>\n<li><code class=\"language-text\">Never</code>: Never pull an image. Use only an image that already exists.</li>\n</ul>\n<p>The following example shows how you can individually configure\napplications:</p>\n<div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"properties\"><pre class=\"language-properties\"><code class=\"language-properties\"><span class=\"token attr-name\">deployer.&lt;app>.kubernetes.imagePullPolicy</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">Always</span></code></pre></div>\n      </div>\n<p>Replace <code class=\"language-text\">&lt;app></code> with the name of your application and <code class=\"language-text\">Always</code> with your\ndesired image pull policy.</p>\n<p>You can configure an image pull policy at the global server level.</p>\n<p>The following example shows how to do so for streams:</p>\n<div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">data</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">application.yaml</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token punctuation\">-</span>\n    <span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">cloud</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">skipper</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">server</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">platform</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">kubernetes</span><span class=\"token punctuation\">:</span>\n                <span class=\"token key atrule\">accounts</span><span class=\"token punctuation\">:</span>\n                  <span class=\"token key atrule\">default</span><span class=\"token punctuation\">:</span>\n                    <span class=\"token key atrule\">imagePullPolicy</span><span class=\"token punctuation\">:</span> Always</code></pre></div>\n      </div>\n<p>The following example shows how to do so for tasks:</p>\n<div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">data</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">application.yaml</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token punctuation\">-</span>\n    <span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">cloud</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">dataflow</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">task</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">platform</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">kubernetes</span><span class=\"token punctuation\">:</span>\n                <span class=\"token key atrule\">accounts</span><span class=\"token punctuation\">:</span>\n                  <span class=\"token key atrule\">default</span><span class=\"token punctuation\">:</span>\n                    <span class=\"token key atrule\">imagePullPolicy</span><span class=\"token punctuation\">:</span> Always</code></pre></div>\n      </div>\n<p>Replace <code class=\"language-text\">Always</code> with your desired image pull policy.</p>\n<h3 id=\"deployment-labels\" style=\"position:relative;\"><a href=\"#deployment-labels\" aria-label=\"deployment labels permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deployment Labels</h3>\n<p>You can set custom labels on objects related to\n<a href=\"https://kubernetes.io/docs/concepts/workloads/controllers/deployment/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Deployment</a>.\nSee\n<a href=\"https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Labels</a>\nfor more information on labels. Labels are specified in <code class=\"language-text\">key:value</code>\nformat.</p>\n<p>The following example shows how you can individually configure\napplications:</p>\n<div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"properties\"><pre class=\"language-properties\"><code class=\"language-properties\"><span class=\"token attr-name\">deployer.&lt;app>.kubernetes.deploymentLabels</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">myLabelName:myLabelValue</span></code></pre></div>\n      </div>\n<p>Replace <code class=\"language-text\">&lt;app></code> with the name of your application, <code class=\"language-text\">myLabelName</code> with\nyour label name, and <code class=\"language-text\">myLabelValue</code> with the value of your label.</p>\n<p>Additionally, you can apply multiple labels, as the following example\nshows:</p>\n<div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"properties\"><pre class=\"language-properties\"><code class=\"language-properties\"><span class=\"token attr-name\">deployer.&lt;app>.kubernetes.deploymentLabels</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">myLabelName:myLabelValue,myLabelName2:myLabelValue2</span></code></pre></div>\n      </div>\n<h3 id=\"nodeport\" style=\"position:relative;\"><a href=\"#nodeport\" aria-label=\"nodeport permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>NodePort</h3>\n<p>Applications are deployed using a <code class=\"language-text\">Service</code> type of <a href=\"https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ClusterIP</a> which is the default Kubernetes <code class=\"language-text\">Service</code> type if not defined otherwise.\n<code class=\"language-text\">ClusterIP</code> services are only reachable from within the cluster itself.</p>\n<p>To expose the deployed application to be available externally, one option is to use <code class=\"language-text\">NodePort</code>.\nSee the <a href=\"https://kubernetes.io/docs/concepts/services-networking/service/#nodeport\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">NodePort</a> documentation for more information.</p>\n<p>The following example shows how you can individually configure applications using Kubernetes assigned ports:</p>\n<div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"properties\"><pre class=\"language-properties\"><code class=\"language-properties\"><span class=\"token attr-name\">deployer.&lt;app>.kubernetes.createNodePort</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">true</span></code></pre></div>\n      </div>\n<p>Replace <code class=\"language-text\">&lt;app></code> with the name of your application.</p>\n<p>Additionally, you can define the port to use for the <code class=\"language-text\">NodePort</code> <code class=\"language-text\">Service</code> as shown below:</p>\n<div class=\"spring-code\">\n        <button onClick=\"codeToClipboard(event)\" class=\"button button-clipboard\" type=\"button\">Copy</button>\n        <div class=\"gatsby-highlight\" data-language=\"properties\"><pre class=\"language-properties\"><code class=\"language-properties\"><span class=\"token attr-name\">deployer.&lt;app>.kubernetes.createNodePort</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">31101</span></code></pre></div>\n      </div>\n<p>Replace <code class=\"language-text\">&lt;app></code> with the name of your application and the value of <code class=\"language-text\">31101</code> with your desired port.</p>\n<div class=\"admonition note\"><p>When defining the port manually, the port must not already be in use and within the defined <code class=\"language-text\">NodePort</code> range.\nPer <a href=\"https://kubernetes.io/docs/concepts/services-networking/service/#nodeport\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">NodePort</a> the default port range is 30000-32767.</p></div>\n<h2 id=\"monitoring\" style=\"position:relative;\"><a href=\"#monitoring\" aria-label=\"monitoring permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Monitoring</h2>\n<p>To learn more about the monitoring experience in Data Flow using Prometheus running on Kubernetes, please refer to the <a href=\"/docs/2.6.x/feature-guides/streams/monitoring/#kubernetes\">Stream Monitoring</a> feature guide.</p>","headings":[{"value":"Helm Installation","depth":2},{"value":"Installing Helm","depth":3},{"value":"Installing the Spring Cloud Data Flow Server and Required Services","depth":3},{"value":"Spring Cloud Data Flow Chart","depth":1},{"value":"This Helm chart is deprecated","depth":2},{"value":"Chart Details","depth":2},{"value":"Prerequisites","depth":2},{"value":"Installing the Chart","depth":2},{"value":"Data Store","depth":3},{"value":"Messaging Layer","depth":3},{"value":"Feature Toggles","depth":3},{"value":"Using an Ingress","depth":3},{"value":"Configuration","depth":2},{"value":"RBAC Configuration","depth":3},{"value":"ServiceAccount Configuration","depth":3},{"value":"Data Flow Server Configuration","depth":3},{"value":"Skipper Server Configuration","depth":3},{"value":"Spring Cloud Deployer for Kubernetes Configuration","depth":3},{"value":"RabbitMQ Configuration","depth":3},{"value":"RabbitMQ HA Configuration","depth":3},{"value":"Kafka Configuration","depth":3},{"value":"MySQL Configuration","depth":3},{"value":"External Database Configuration","depth":3},{"value":"Feature Toggles","depth":3},{"value":"Ingress","depth":3},{"value":"Grafana","depth":3},{"value":"Prometheus","depth":3},{"value":"Expected output","depth":4},{"value":"Version Compatibility","depth":4},{"value":"Register prebuilt applications","depth":2},{"value":"Application and Server Properties","depth":2},{"value":"Memory and CPU Settings","depth":3},{"value":"Environment Variables","depth":3},{"value":"Liveness and Readiness Probes","depth":3},{"value":"Using <code class=\"language-text\">SPRING_APPLICATION_JSON</code>","depth":3},{"value":"Private Docker Registry","depth":3},{"value":"Volume Mounted Secretes","depth":4},{"value":"Annotations","depth":3},{"value":"Entry Point Style","depth":3},{"value":"Deployment Service Account","depth":3},{"value":"Image Pull Policy","depth":3},{"value":"Deployment Labels","depth":3},{"value":"NodePort","depth":3},{"value":"Monitoring","depth":2}],"fields":{"path":"/docs/2.6.x/installation/kubernetes/helm/","version":"2.6.x","category":"installation","sourcePath":"pages/1-installation/3-kubernetes/2-helm.md"},"frontmatter":{"title":"Helm","summary":null,"path":"installation/kubernetes/helm","toc":null,"prevNext":null}}},"pageContext":{"slug":"/docs/2.6.x/installation/kubernetes/helm/","version":"2.6.x","versionPath":""}},"staticQueryHashes":["2044043181"]}